//	Auto-generated by the "go-xsd" package located at:
//		github.com/metaleap/go-xsd
//	Comments on types and fields (if any) are from the XSD file located at:
//		mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd
package go_QuestionForm

import (
	xsdt "github.com/metaleap/go-xsd/types"
)

type XsdGoPkgHasElems_FormattedContentchoiceContentTypeschema_FormattedContent_XsdtString_ struct {
	FormattedContents []xsdt.String `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd FormattedContent"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_FormattedContentchoiceContentTypeschema_FormattedContent_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_FormattedContentchoiceContentTypeschema_FormattedContent_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_FormattedContentchoiceContentTypeschema_FormattedContent_XsdtString_ instance.
func (me *XsdGoPkgHasElems_FormattedContentchoiceContentTypeschema_FormattedContent_XsdtString_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_FormattedContentchoiceContentTypeschema_FormattedContent_XsdtString_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_AltTextsequenceBinaryContentTypeschema_AltText_XsdtString_ struct {
	AltText xsdt.String `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd AltText"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_AltTextsequenceBinaryContentTypeschema_AltText_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_AltTextsequenceBinaryContentTypeschema_AltText_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_AltTextsequenceBinaryContentTypeschema_AltText_XsdtString_ instance.
func (me *XsdGoPkgHasElem_AltTextsequenceBinaryContentTypeschema_AltText_XsdtString_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_AltTextsequenceBinaryContentTypeschema_AltText_XsdtString_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TxsdMimeTypeSequenceType xsdt.String

//	Since TxsdMimeTypeSequenceType is just a simple String type, this merely returns the current string value.
func (me TxsdMimeTypeSequenceType) String() string { return xsdt.String(me).String() }

//	This convenience method just performs a simple type conversion to TxsdMimeTypeSequenceType's alias type xsdt.String.
func (me TxsdMimeTypeSequenceType) ToXsdtString() xsdt.String { return xsdt.String(me) }

//	Returns true if the value of this enumerated TxsdMimeTypeSequenceType is "image".
func (me TxsdMimeTypeSequenceType) IsImage() bool { return me.String() == "image" }

//	Returns true if the value of this enumerated TxsdMimeTypeSequenceType is "audio".
func (me TxsdMimeTypeSequenceType) IsAudio() bool { return me.String() == "audio" }

//	Returns true if the value of this enumerated TxsdMimeTypeSequenceType is "video".
func (me TxsdMimeTypeSequenceType) IsVideo() bool { return me.String() == "video" }

//	Since TxsdMimeTypeSequenceType is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdMimeTypeSequenceType) Set(s string) { (*xsdt.String)(me).Set(s) }

type XsdGoPkgHasElem_TypesequenceMimeTypeschema_Type_TxsdMimeTypeSequenceType_ struct {
	Type TxsdMimeTypeSequenceType `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd Type"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_TypesequenceMimeTypeschema_Type_TxsdMimeTypeSequenceType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_TypesequenceMimeTypeschema_Type_TxsdMimeTypeSequenceType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_TypesequenceMimeTypeschema_Type_TxsdMimeTypeSequenceType_ instance.
func (me *XsdGoPkgHasElem_TypesequenceMimeTypeschema_Type_TxsdMimeTypeSequenceType_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_TypesequenceMimeTypeschema_Type_TxsdMimeTypeSequenceType_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_SubTypesequenceMimeTypeschema_SubType_XsdtString_ struct {
	SubType xsdt.String `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd SubType"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_SubTypesequenceMimeTypeschema_SubType_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_SubTypesequenceMimeTypeschema_SubType_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_SubTypesequenceMimeTypeschema_SubType_XsdtString_ instance.
func (me *XsdGoPkgHasElem_SubTypesequenceMimeTypeschema_SubType_XsdtString_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_SubTypesequenceMimeTypeschema_SubType_XsdtString_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TMimeType struct {
	XsdGoPkgHasElem_SubTypesequenceMimeTypeschema_SubType_XsdtString_

	XsdGoPkgHasElem_TypesequenceMimeTypeschema_Type_TxsdMimeTypeSequenceType_
}

//	If the WalkHandlers.TMimeType function is not nil (ie. was set by outside code), calls it with this TMimeType instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TMimeType instance.
func (me *TMimeType) Walk() (err error) {
	if fn := WalkHandlers.TMimeType; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElem_TypesequenceMimeTypeschema_Type_TxsdMimeTypeSequenceType_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_SubTypesequenceMimeTypeschema_SubType_XsdtString_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_MimeTypesequenceBinaryContentTypeschema_MimeType_TMimeType_ struct {
	MimeType *TMimeType `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd MimeType"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_MimeTypesequenceBinaryContentTypeschema_MimeType_TMimeType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_MimeTypesequenceBinaryContentTypeschema_MimeType_TMimeType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_MimeTypesequenceBinaryContentTypeschema_MimeType_TMimeType_ instance.
func (me *XsdGoPkgHasElem_MimeTypesequenceBinaryContentTypeschema_MimeType_TMimeType_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_MimeTypesequenceBinaryContentTypeschema_MimeType_TMimeType_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.MimeType.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TURLType xsdt.AnyURI

//	Since TURLType is just a simple String type, this merely sets the current value from the specified string.
func (me *TURLType) Set(s string) { (*xsdt.AnyURI)(me).Set(s) }

//	Since TURLType is just a simple String type, this merely returns the current string value.
func (me TURLType) String() string { return xsdt.AnyURI(me).String() }

//	This convenience method just performs a simple type conversion to TURLType's alias type xsdt.AnyURI.
func (me TURLType) ToXsdtAnyURI() xsdt.AnyURI { return xsdt.AnyURI(me) }

type XsdGoPkgHasElem_DataURLsequenceBinaryContentTypeschema_DataURL_TURLType_ struct {
	DataURL TURLType `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd DataURL"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_DataURLsequenceBinaryContentTypeschema_DataURL_TURLType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_DataURLsequenceBinaryContentTypeschema_DataURL_TURLType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_DataURLsequenceBinaryContentTypeschema_DataURL_TURLType_ instance.
func (me *XsdGoPkgHasElem_DataURLsequenceBinaryContentTypeschema_DataURL_TURLType_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_DataURLsequenceBinaryContentTypeschema_DataURL_TURLType_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TBinaryContentType struct {
	XsdGoPkgHasElem_MimeTypesequenceBinaryContentTypeschema_MimeType_TMimeType_

	XsdGoPkgHasElem_DataURLsequenceBinaryContentTypeschema_DataURL_TURLType_

	XsdGoPkgHasElem_AltTextsequenceBinaryContentTypeschema_AltText_XsdtString_
}

//	If the WalkHandlers.TBinaryContentType function is not nil (ie. was set by outside code), calls it with this TBinaryContentType instance as the single argument. Then calls the Walk() method on 3/3 embed(s) and 0/0 field(s) belonging to this TBinaryContentType instance.
func (me *TBinaryContentType) Walk() (err error) {
	if fn := WalkHandlers.TBinaryContentType; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElem_DataURLsequenceBinaryContentTypeschema_DataURL_TURLType_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_AltTextsequenceBinaryContentTypeschema_AltText_XsdtString_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_MimeTypesequenceBinaryContentTypeschema_MimeType_TMimeType_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_BinarychoiceContentTypeschema_Binary_TBinaryContentType_ struct {
	Binaries []*TBinaryContentType `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd Binary"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_BinarychoiceContentTypeschema_Binary_TBinaryContentType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_BinarychoiceContentTypeschema_Binary_TBinaryContentType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_BinarychoiceContentTypeschema_Binary_TBinaryContentType_ instance.
func (me *XsdGoPkgHasElems_BinarychoiceContentTypeschema_Binary_TBinaryContentType_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_BinarychoiceContentTypeschema_Binary_TBinaryContentType_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.Binaries {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_AppletPathsequenceJavaAppletContentTypeschema_AppletPath_TURLType_ struct {
	AppletPath TURLType `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd AppletPath"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_AppletPathsequenceJavaAppletContentTypeschema_AppletPath_TURLType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_AppletPathsequenceJavaAppletContentTypeschema_AppletPath_TURLType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_AppletPathsequenceJavaAppletContentTypeschema_AppletPath_TURLType_ instance.
func (me *XsdGoPkgHasElem_AppletPathsequenceJavaAppletContentTypeschema_AppletPath_TURLType_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_AppletPathsequenceJavaAppletContentTypeschema_AppletPath_TURLType_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_AppletFilenamesequenceJavaAppletContentTypeschema_AppletFilename_XsdtString_ struct {
	AppletFilename xsdt.String `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd AppletFilename"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_AppletFilenamesequenceJavaAppletContentTypeschema_AppletFilename_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_AppletFilenamesequenceJavaAppletContentTypeschema_AppletFilename_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_AppletFilenamesequenceJavaAppletContentTypeschema_AppletFilename_XsdtString_ instance.
func (me *XsdGoPkgHasElem_AppletFilenamesequenceJavaAppletContentTypeschema_AppletFilename_XsdtString_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_AppletFilenamesequenceJavaAppletContentTypeschema_AppletFilename_XsdtString_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_WidthsequenceJavaAppletContentTypeschema_Width_XsdtString_ struct {
	Width xsdt.String `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd Width"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_WidthsequenceJavaAppletContentTypeschema_Width_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_WidthsequenceJavaAppletContentTypeschema_Width_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_WidthsequenceJavaAppletContentTypeschema_Width_XsdtString_ instance.
func (me *XsdGoPkgHasElem_WidthsequenceJavaAppletContentTypeschema_Width_XsdtString_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_WidthsequenceJavaAppletContentTypeschema_Width_XsdtString_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_HeightsequenceJavaAppletContentTypeschema_Height_XsdtString_ struct {
	Height xsdt.String `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd Height"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_HeightsequenceJavaAppletContentTypeschema_Height_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_HeightsequenceJavaAppletContentTypeschema_Height_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_HeightsequenceJavaAppletContentTypeschema_Height_XsdtString_ instance.
func (me *XsdGoPkgHasElem_HeightsequenceJavaAppletContentTypeschema_Height_XsdtString_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_HeightsequenceJavaAppletContentTypeschema_Height_XsdtString_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_NamesequenceApplicationParameterschema_Name_XsdtString_ struct {
	Name xsdt.String `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd Name"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_NamesequenceApplicationParameterschema_Name_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_NamesequenceApplicationParameterschema_Name_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_NamesequenceApplicationParameterschema_Name_XsdtString_ instance.
func (me *XsdGoPkgHasElem_NamesequenceApplicationParameterschema_Name_XsdtString_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_NamesequenceApplicationParameterschema_Name_XsdtString_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_ValuesequenceApplicationParameterschema_Value_XsdtString_ struct {
	Value xsdt.String `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd Value"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_ValuesequenceApplicationParameterschema_Value_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ValuesequenceApplicationParameterschema_Value_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_ValuesequenceApplicationParameterschema_Value_XsdtString_ instance.
func (me *XsdGoPkgHasElem_ValuesequenceApplicationParameterschema_Value_XsdtString_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_ValuesequenceApplicationParameterschema_Value_XsdtString_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TApplicationParameter struct {
	XsdGoPkgHasElem_NamesequenceApplicationParameterschema_Name_XsdtString_

	XsdGoPkgHasElem_ValuesequenceApplicationParameterschema_Value_XsdtString_
}

//	If the WalkHandlers.TApplicationParameter function is not nil (ie. was set by outside code), calls it with this TApplicationParameter instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TApplicationParameter instance.
func (me *TApplicationParameter) Walk() (err error) {
	if fn := WalkHandlers.TApplicationParameter; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElem_NamesequenceApplicationParameterschema_Name_XsdtString_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_ValuesequenceApplicationParameterschema_Value_XsdtString_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_ApplicationParametersequenceJavaAppletContentTypeschema_ApplicationParameter_TApplicationParameter_ struct {
	ApplicationParameters []*TApplicationParameter `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd ApplicationParameter"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_ApplicationParametersequenceJavaAppletContentTypeschema_ApplicationParameter_TApplicationParameter_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_ApplicationParametersequenceJavaAppletContentTypeschema_ApplicationParameter_TApplicationParameter_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_ApplicationParametersequenceJavaAppletContentTypeschema_ApplicationParameter_TApplicationParameter_ instance.
func (me *XsdGoPkgHasElems_ApplicationParametersequenceJavaAppletContentTypeschema_ApplicationParameter_TApplicationParameter_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_ApplicationParametersequenceJavaAppletContentTypeschema_ApplicationParameter_TApplicationParameter_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.ApplicationParameters {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TJavaAppletContentType struct {
	XsdGoPkgHasElem_AppletFilenamesequenceJavaAppletContentTypeschema_AppletFilename_XsdtString_

	XsdGoPkgHasElem_WidthsequenceJavaAppletContentTypeschema_Width_XsdtString_

	XsdGoPkgHasElem_HeightsequenceJavaAppletContentTypeschema_Height_XsdtString_

	XsdGoPkgHasElems_ApplicationParametersequenceJavaAppletContentTypeschema_ApplicationParameter_TApplicationParameter_

	XsdGoPkgHasElem_AppletPathsequenceJavaAppletContentTypeschema_AppletPath_TURLType_
}

//	If the WalkHandlers.TJavaAppletContentType function is not nil (ie. was set by outside code), calls it with this TJavaAppletContentType instance as the single argument. Then calls the Walk() method on 5/5 embed(s) and 0/0 field(s) belonging to this TJavaAppletContentType instance.
func (me *TJavaAppletContentType) Walk() (err error) {
	if fn := WalkHandlers.TJavaAppletContentType; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElem_AppletPathsequenceJavaAppletContentTypeschema_AppletPath_TURLType_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_AppletFilenamesequenceJavaAppletContentTypeschema_AppletFilename_XsdtString_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_WidthsequenceJavaAppletContentTypeschema_Width_XsdtString_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_HeightsequenceJavaAppletContentTypeschema_Height_XsdtString_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElems_ApplicationParametersequenceJavaAppletContentTypeschema_ApplicationParameter_TApplicationParameter_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_JavaAppletchoiceApplicationContentTypeschema_JavaApplet_TJavaAppletContentType_ struct {
	JavaApplet *TJavaAppletContentType `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd JavaApplet"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_JavaAppletchoiceApplicationContentTypeschema_JavaApplet_TJavaAppletContentType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_JavaAppletchoiceApplicationContentTypeschema_JavaApplet_TJavaAppletContentType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_JavaAppletchoiceApplicationContentTypeschema_JavaApplet_TJavaAppletContentType_ instance.
func (me *XsdGoPkgHasElem_JavaAppletchoiceApplicationContentTypeschema_JavaApplet_TJavaAppletContentType_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_JavaAppletchoiceApplicationContentTypeschema_JavaApplet_TJavaAppletContentType_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.JavaApplet.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_FlashMovieURLsequenceFlashContentTypeschema_FlashMovieURL_TURLType_ struct {
	FlashMovieURL TURLType `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd FlashMovieURL"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_FlashMovieURLsequenceFlashContentTypeschema_FlashMovieURL_TURLType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_FlashMovieURLsequenceFlashContentTypeschema_FlashMovieURL_TURLType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_FlashMovieURLsequenceFlashContentTypeschema_FlashMovieURL_TURLType_ instance.
func (me *XsdGoPkgHasElem_FlashMovieURLsequenceFlashContentTypeschema_FlashMovieURL_TURLType_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_FlashMovieURLsequenceFlashContentTypeschema_FlashMovieURL_TURLType_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TFlashContentType struct {
	XsdGoPkgHasElem_FlashMovieURLsequenceFlashContentTypeschema_FlashMovieURL_TURLType_

	XsdGoPkgHasElem_WidthsequenceJavaAppletContentTypeschema_Width_XsdtString_

	XsdGoPkgHasElem_HeightsequenceJavaAppletContentTypeschema_Height_XsdtString_

	XsdGoPkgHasElems_ApplicationParametersequenceJavaAppletContentTypeschema_ApplicationParameter_TApplicationParameter_
}

//	If the WalkHandlers.TFlashContentType function is not nil (ie. was set by outside code), calls it with this TFlashContentType instance as the single argument. Then calls the Walk() method on 4/4 embed(s) and 0/0 field(s) belonging to this TFlashContentType instance.
func (me *TFlashContentType) Walk() (err error) {
	if fn := WalkHandlers.TFlashContentType; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElem_FlashMovieURLsequenceFlashContentTypeschema_FlashMovieURL_TURLType_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_WidthsequenceJavaAppletContentTypeschema_Width_XsdtString_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_HeightsequenceJavaAppletContentTypeschema_Height_XsdtString_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElems_ApplicationParametersequenceJavaAppletContentTypeschema_ApplicationParameter_TApplicationParameter_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_FlashchoiceApplicationContentTypeschema_Flash_TFlashContentType_ struct {
	Flash *TFlashContentType `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd Flash"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_FlashchoiceApplicationContentTypeschema_Flash_TFlashContentType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_FlashchoiceApplicationContentTypeschema_Flash_TFlashContentType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_FlashchoiceApplicationContentTypeschema_Flash_TFlashContentType_ instance.
func (me *XsdGoPkgHasElem_FlashchoiceApplicationContentTypeschema_Flash_TFlashContentType_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_FlashchoiceApplicationContentTypeschema_Flash_TFlashContentType_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.Flash.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TApplicationContentType struct {
	XsdGoPkgHasElem_FlashchoiceApplicationContentTypeschema_Flash_TFlashContentType_

	XsdGoPkgHasElem_JavaAppletchoiceApplicationContentTypeschema_JavaApplet_TJavaAppletContentType_
}

//	If the WalkHandlers.TApplicationContentType function is not nil (ie. was set by outside code), calls it with this TApplicationContentType instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TApplicationContentType instance.
func (me *TApplicationContentType) Walk() (err error) {
	if fn := WalkHandlers.TApplicationContentType; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElem_FlashchoiceApplicationContentTypeschema_Flash_TFlashContentType_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_JavaAppletchoiceApplicationContentTypeschema_JavaApplet_TJavaAppletContentType_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_ApplicationchoiceContentTypeschema_Application_TApplicationContentType_ struct {
	Applications []*TApplicationContentType `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd Application"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_ApplicationchoiceContentTypeschema_Application_TApplicationContentType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_ApplicationchoiceContentTypeschema_Application_TApplicationContentType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_ApplicationchoiceContentTypeschema_Application_TApplicationContentType_ instance.
func (me *XsdGoPkgHasElems_ApplicationchoiceContentTypeschema_Application_TApplicationContentType_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_ApplicationchoiceContentTypeschema_Application_TApplicationContentType_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.Applications {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_TypesequenceEmbeddedMimeTypeschema_Type_XsdtString_ struct {
	Type xsdt.String `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd Type"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_TypesequenceEmbeddedMimeTypeschema_Type_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_TypesequenceEmbeddedMimeTypeschema_Type_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_TypesequenceEmbeddedMimeTypeschema_Type_XsdtString_ instance.
func (me *XsdGoPkgHasElem_TypesequenceEmbeddedMimeTypeschema_Type_XsdtString_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_TypesequenceEmbeddedMimeTypeschema_Type_XsdtString_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TEmbeddedMimeType struct {
	XsdGoPkgHasElem_TypesequenceEmbeddedMimeTypeschema_Type_XsdtString_

	XsdGoPkgHasElem_SubTypesequenceMimeTypeschema_SubType_XsdtString_
}

//	If the WalkHandlers.TEmbeddedMimeType function is not nil (ie. was set by outside code), calls it with this TEmbeddedMimeType instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TEmbeddedMimeType instance.
func (me *TEmbeddedMimeType) Walk() (err error) {
	if fn := WalkHandlers.TEmbeddedMimeType; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElem_TypesequenceEmbeddedMimeTypeschema_Type_XsdtString_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_SubTypesequenceMimeTypeschema_SubType_XsdtString_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_EmbeddedMimeTypesequenceEmbeddedBinaryContentTypeschema_EmbeddedMimeType_TEmbeddedMimeType_ struct {
	EmbeddedMimeType *TEmbeddedMimeType `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd EmbeddedMimeType"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_EmbeddedMimeTypesequenceEmbeddedBinaryContentTypeschema_EmbeddedMimeType_TEmbeddedMimeType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_EmbeddedMimeTypesequenceEmbeddedBinaryContentTypeschema_EmbeddedMimeType_TEmbeddedMimeType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_EmbeddedMimeTypesequenceEmbeddedBinaryContentTypeschema_EmbeddedMimeType_TEmbeddedMimeType_ instance.
func (me *XsdGoPkgHasElem_EmbeddedMimeTypesequenceEmbeddedBinaryContentTypeschema_EmbeddedMimeType_TEmbeddedMimeType_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_EmbeddedMimeTypesequenceEmbeddedBinaryContentTypeschema_EmbeddedMimeType_TEmbeddedMimeType_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.EmbeddedMimeType.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TEmbeddedBinaryContentType struct {
	XsdGoPkgHasElem_DataURLsequenceBinaryContentTypeschema_DataURL_TURLType_

	XsdGoPkgHasElem_AltTextsequenceBinaryContentTypeschema_AltText_XsdtString_

	XsdGoPkgHasElem_WidthsequenceJavaAppletContentTypeschema_Width_XsdtString_

	XsdGoPkgHasElem_HeightsequenceJavaAppletContentTypeschema_Height_XsdtString_

	XsdGoPkgHasElems_ApplicationParametersequenceJavaAppletContentTypeschema_ApplicationParameter_TApplicationParameter_

	XsdGoPkgHasElem_EmbeddedMimeTypesequenceEmbeddedBinaryContentTypeschema_EmbeddedMimeType_TEmbeddedMimeType_
}

//	If the WalkHandlers.TEmbeddedBinaryContentType function is not nil (ie. was set by outside code), calls it with this TEmbeddedBinaryContentType instance as the single argument. Then calls the Walk() method on 6/6 embed(s) and 0/0 field(s) belonging to this TEmbeddedBinaryContentType instance.
func (me *TEmbeddedBinaryContentType) Walk() (err error) {
	if fn := WalkHandlers.TEmbeddedBinaryContentType; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElem_AltTextsequenceBinaryContentTypeschema_AltText_XsdtString_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_WidthsequenceJavaAppletContentTypeschema_Width_XsdtString_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_HeightsequenceJavaAppletContentTypeschema_Height_XsdtString_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElems_ApplicationParametersequenceJavaAppletContentTypeschema_ApplicationParameter_TApplicationParameter_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_EmbeddedMimeTypesequenceEmbeddedBinaryContentTypeschema_EmbeddedMimeType_TEmbeddedMimeType_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_DataURLsequenceBinaryContentTypeschema_DataURL_TURLType_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_EmbeddedBinarychoiceContentTypeschema_EmbeddedBinary_TEmbeddedBinaryContentType_ struct {
	EmbeddedBinaries []*TEmbeddedBinaryContentType `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd EmbeddedBinary"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_EmbeddedBinarychoiceContentTypeschema_EmbeddedBinary_TEmbeddedBinaryContentType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_EmbeddedBinarychoiceContentTypeschema_EmbeddedBinary_TEmbeddedBinaryContentType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_EmbeddedBinarychoiceContentTypeschema_EmbeddedBinary_TEmbeddedBinaryContentType_ instance.
func (me *XsdGoPkgHasElems_EmbeddedBinarychoiceContentTypeschema_EmbeddedBinary_TEmbeddedBinaryContentType_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_EmbeddedBinarychoiceContentTypeschema_EmbeddedBinary_TEmbeddedBinaryContentType_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.EmbeddedBinaries {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_TitlechoiceContentTypeschema_Title_XsdtString_ struct {
	Titles []xsdt.String `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd Title"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_TitlechoiceContentTypeschema_Title_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_TitlechoiceContentTypeschema_Title_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_TitlechoiceContentTypeschema_Title_XsdtString_ instance.
func (me *XsdGoPkgHasElems_TitlechoiceContentTypeschema_Title_XsdtString_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_TitlechoiceContentTypeschema_Title_XsdtString_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_TextchoiceContentTypeschema_Text_XsdtString_ struct {
	Texts []xsdt.String `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd Text"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_TextchoiceContentTypeschema_Text_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_TextchoiceContentTypeschema_Text_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_TextchoiceContentTypeschema_Text_XsdtString_ instance.
func (me *XsdGoPkgHasElems_TextchoiceContentTypeschema_Text_XsdtString_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_TextchoiceContentTypeschema_Text_XsdtString_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_ListItemsequenceTxsdContentTypeChoiceListListchoiceContentTypeschema_ListItem_XsdtString_ struct {
	ListItems []xsdt.String `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd ListItem"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_ListItemsequenceTxsdContentTypeChoiceListListchoiceContentTypeschema_ListItem_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_ListItemsequenceTxsdContentTypeChoiceListListchoiceContentTypeschema_ListItem_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_ListItemsequenceTxsdContentTypeChoiceListListchoiceContentTypeschema_ListItem_XsdtString_ instance.
func (me *XsdGoPkgHasElems_ListItemsequenceTxsdContentTypeChoiceListListchoiceContentTypeschema_ListItem_XsdtString_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_ListItemsequenceTxsdContentTypeChoiceListListchoiceContentTypeschema_ListItem_XsdtString_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TxsdContentTypeChoiceList struct {
	XsdGoPkgHasElems_ListItemsequenceTxsdContentTypeChoiceListListchoiceContentTypeschema_ListItem_XsdtString_
}

//	If the WalkHandlers.TxsdContentTypeChoiceList function is not nil (ie. was set by outside code), calls it with this TxsdContentTypeChoiceList instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TxsdContentTypeChoiceList instance.
func (me *TxsdContentTypeChoiceList) Walk() (err error) {
	if fn := WalkHandlers.TxsdContentTypeChoiceList; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_ListItemsequenceTxsdContentTypeChoiceListListchoiceContentTypeschema_ListItem_XsdtString_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_ListchoiceContentTypeschema_List_TxsdContentTypeChoiceList_ struct {
	Lists []*TxsdContentTypeChoiceList `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd List"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_ListchoiceContentTypeschema_List_TxsdContentTypeChoiceList_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_ListchoiceContentTypeschema_List_TxsdContentTypeChoiceList_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_ListchoiceContentTypeschema_List_TxsdContentTypeChoiceList_ instance.
func (me *XsdGoPkgHasElems_ListchoiceContentTypeschema_List_TxsdContentTypeChoiceList_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_ListchoiceContentTypeschema_List_TxsdContentTypeChoiceList_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.Lists {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TContentType struct {
	XsdGoPkgHasElems_ListchoiceContentTypeschema_List_TxsdContentTypeChoiceList_

	XsdGoPkgHasElems_FormattedContentchoiceContentTypeschema_FormattedContent_XsdtString_

	XsdGoPkgHasElems_BinarychoiceContentTypeschema_Binary_TBinaryContentType_

	XsdGoPkgHasElems_ApplicationchoiceContentTypeschema_Application_TApplicationContentType_

	XsdGoPkgHasElems_EmbeddedBinarychoiceContentTypeschema_EmbeddedBinary_TEmbeddedBinaryContentType_

	XsdGoPkgHasElems_TitlechoiceContentTypeschema_Title_XsdtString_

	XsdGoPkgHasElems_TextchoiceContentTypeschema_Text_XsdtString_
}

//	If the WalkHandlers.TContentType function is not nil (ie. was set by outside code), calls it with this TContentType instance as the single argument. Then calls the Walk() method on 7/7 embed(s) and 0/0 field(s) belonging to this TContentType instance.
func (me *TContentType) Walk() (err error) {
	if fn := WalkHandlers.TContentType; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_TextchoiceContentTypeschema_Text_XsdtString_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElems_ListchoiceContentTypeschema_List_TxsdContentTypeChoiceList_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElems_FormattedContentchoiceContentTypeschema_FormattedContent_XsdtString_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElems_BinarychoiceContentTypeschema_Binary_TBinaryContentType_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElems_ApplicationchoiceContentTypeschema_Application_TApplicationContentType_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElems_EmbeddedBinarychoiceContentTypeschema_EmbeddedBinary_TEmbeddedBinaryContentType_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElems_TitlechoiceContentTypeschema_Title_XsdtString_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_OverviewchoicesequenceTxsdQuestionFormQuestionFormschema_Overview_TContentType_ struct {
	Overviews []*TContentType `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd Overview"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_OverviewchoicesequenceTxsdQuestionFormQuestionFormschema_Overview_TContentType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_OverviewchoicesequenceTxsdQuestionFormQuestionFormschema_Overview_TContentType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_OverviewchoicesequenceTxsdQuestionFormQuestionFormschema_Overview_TContentType_ instance.
func (me *XsdGoPkgHasElems_OverviewchoicesequenceTxsdQuestionFormQuestionFormschema_Overview_TContentType_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_OverviewchoicesequenceTxsdQuestionFormQuestionFormschema_Overview_TContentType_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.Overviews {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_QuestionIdentifiersequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_QuestionIdentifier_XsdtString_ struct {
	QuestionIdentifier xsdt.String `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd QuestionIdentifier"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_QuestionIdentifiersequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_QuestionIdentifier_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_QuestionIdentifiersequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_QuestionIdentifier_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_QuestionIdentifiersequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_QuestionIdentifier_XsdtString_ instance.
func (me *XsdGoPkgHasElem_QuestionIdentifiersequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_QuestionIdentifier_XsdtString_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_QuestionIdentifiersequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_QuestionIdentifier_XsdtString_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_DisplayNamesequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_DisplayName_XsdtString_ struct {
	DisplayName xsdt.String `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd DisplayName"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_DisplayNamesequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_DisplayName_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_DisplayNamesequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_DisplayName_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_DisplayNamesequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_DisplayName_XsdtString_ instance.
func (me *XsdGoPkgHasElem_DisplayNamesequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_DisplayName_XsdtString_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_DisplayNamesequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_DisplayName_XsdtString_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_IsRequiredsequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_IsRequired_XsdtBoolean_ struct {
	IsRequired xsdt.Boolean `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd IsRequired"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_IsRequiredsequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_IsRequired_XsdtBoolean_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_IsRequiredsequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_IsRequired_XsdtBoolean_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_IsRequiredsequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_IsRequired_XsdtBoolean_ instance.
func (me *XsdGoPkgHasElem_IsRequiredsequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_IsRequired_XsdtBoolean_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_IsRequiredsequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_IsRequired_XsdtBoolean_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_QuestionContentsequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_QuestionContent_TContentType_ struct {
	QuestionContent *TContentType `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd QuestionContent"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_QuestionContentsequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_QuestionContent_TContentType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_QuestionContentsequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_QuestionContent_TContentType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_QuestionContentsequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_QuestionContent_TContentType_ instance.
func (me *XsdGoPkgHasElem_QuestionContentsequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_QuestionContent_TContentType_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_QuestionContentsequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_QuestionContent_TContentType_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.QuestionContent.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasAttr_MinValue_XsdtInt_ struct {
	MinValue xsdt.Int `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd minValue,attr"`
}

type XsdGoPkgHasAttr_MaxValue_XsdtInt_ struct {
	MaxValue xsdt.Int `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd maxValue,attr"`
}

type TxsdFreeTextAnswerTypeSequenceConstraintsSequenceIsNumeric struct {
	XsdGoPkgHasAttr_MinValue_XsdtInt_

	XsdGoPkgHasAttr_MaxValue_XsdtInt_
}

//	If the WalkHandlers.TxsdFreeTextAnswerTypeSequenceConstraintsSequenceIsNumeric function is not nil (ie. was set by outside code), calls it with this TxsdFreeTextAnswerTypeSequenceConstraintsSequenceIsNumeric instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdFreeTextAnswerTypeSequenceConstraintsSequenceIsNumeric instance.
func (me *TxsdFreeTextAnswerTypeSequenceConstraintsSequenceIsNumeric) Walk() (err error) {
	if fn := WalkHandlers.TxsdFreeTextAnswerTypeSequenceConstraintsSequenceIsNumeric; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_IsNumericsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_IsNumeric_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceIsNumeric_ struct {
	IsNumeric *TxsdFreeTextAnswerTypeSequenceConstraintsSequenceIsNumeric `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd IsNumeric"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_IsNumericsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_IsNumeric_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceIsNumeric_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_IsNumericsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_IsNumeric_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceIsNumeric_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_IsNumericsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_IsNumeric_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceIsNumeric_ instance.
func (me *XsdGoPkgHasElem_IsNumericsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_IsNumeric_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceIsNumeric_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_IsNumericsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_IsNumeric_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceIsNumeric_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.IsNumeric.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasAttr_MaxLength_XsdtPositiveInteger_ struct {
	MaxLength xsdt.PositiveInteger `xml:"maxLength,attr"`
}

type XsdGoPkgHasAttr_MinLength_XsdtNonNegativeInteger_ struct {
	MinLength xsdt.NonNegativeInteger `xml:"minLength,attr"`
}

type TxsdFreeTextAnswerTypeSequenceConstraintsSequenceLength struct {
	XsdGoPkgHasAttr_MinLength_XsdtNonNegativeInteger_

	XsdGoPkgHasAttr_MaxLength_XsdtPositiveInteger_
}

//	If the WalkHandlers.TxsdFreeTextAnswerTypeSequenceConstraintsSequenceLength function is not nil (ie. was set by outside code), calls it with this TxsdFreeTextAnswerTypeSequenceConstraintsSequenceLength instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdFreeTextAnswerTypeSequenceConstraintsSequenceLength instance.
func (me *TxsdFreeTextAnswerTypeSequenceConstraintsSequenceLength) Walk() (err error) {
	if fn := WalkHandlers.TxsdFreeTextAnswerTypeSequenceConstraintsSequenceLength; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_LengthsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_Length_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceLength_ struct {
	Length *TxsdFreeTextAnswerTypeSequenceConstraintsSequenceLength `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd Length"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_LengthsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_Length_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceLength_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_LengthsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_Length_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceLength_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_LengthsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_Length_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceLength_ instance.
func (me *XsdGoPkgHasElem_LengthsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_Length_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceLength_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_LengthsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_Length_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceLength_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.Length.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasAttr_Regex_XsdtString_ struct {
	Regex xsdt.String `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd regex,attr"`
}

type XsdGoPkgHasAttr_ErrorText_XsdtString_ struct {
	ErrorText xsdt.String `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd errorText,attr"`
}

type XsdGoPkgHasAttr_Flags_XsdtString_ struct {
	Flags xsdt.String `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd flags,attr"`
}

type TxsdFreeTextAnswerTypeSequenceConstraintsSequenceAnswerFormatRegex struct {
	XsdGoPkgHasAttr_Regex_XsdtString_

	XsdGoPkgHasAttr_ErrorText_XsdtString_

	XsdGoPkgHasAttr_Flags_XsdtString_
}

//	If the WalkHandlers.TxsdFreeTextAnswerTypeSequenceConstraintsSequenceAnswerFormatRegex function is not nil (ie. was set by outside code), calls it with this TxsdFreeTextAnswerTypeSequenceConstraintsSequenceAnswerFormatRegex instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TxsdFreeTextAnswerTypeSequenceConstraintsSequenceAnswerFormatRegex instance.
func (me *TxsdFreeTextAnswerTypeSequenceConstraintsSequenceAnswerFormatRegex) Walk() (err error) {
	if fn := WalkHandlers.TxsdFreeTextAnswerTypeSequenceConstraintsSequenceAnswerFormatRegex; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_AnswerFormatRegexsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_AnswerFormatRegex_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceAnswerFormatRegex_ struct {
	AnswerFormatRegexs []*TxsdFreeTextAnswerTypeSequenceConstraintsSequenceAnswerFormatRegex `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd AnswerFormatRegex"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_AnswerFormatRegexsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_AnswerFormatRegex_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceAnswerFormatRegex_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_AnswerFormatRegexsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_AnswerFormatRegex_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceAnswerFormatRegex_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_AnswerFormatRegexsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_AnswerFormatRegex_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceAnswerFormatRegex_ instance.
func (me *XsdGoPkgHasElems_AnswerFormatRegexsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_AnswerFormatRegex_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceAnswerFormatRegex_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_AnswerFormatRegexsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_AnswerFormatRegex_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceAnswerFormatRegex_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.AnswerFormatRegexs {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TxsdFreeTextAnswerTypeSequenceConstraints struct {
	XsdGoPkgHasElem_IsNumericsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_IsNumeric_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceIsNumeric_

	XsdGoPkgHasElem_LengthsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_Length_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceLength_

	XsdGoPkgHasElems_AnswerFormatRegexsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_AnswerFormatRegex_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceAnswerFormatRegex_
}

//	If the WalkHandlers.TxsdFreeTextAnswerTypeSequenceConstraints function is not nil (ie. was set by outside code), calls it with this TxsdFreeTextAnswerTypeSequenceConstraints instance as the single argument. Then calls the Walk() method on 3/3 embed(s) and 0/0 field(s) belonging to this TxsdFreeTextAnswerTypeSequenceConstraints instance.
func (me *TxsdFreeTextAnswerTypeSequenceConstraints) Walk() (err error) {
	if fn := WalkHandlers.TxsdFreeTextAnswerTypeSequenceConstraints; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElem_IsNumericsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_IsNumeric_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceIsNumeric_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_LengthsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_Length_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceLength_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElems_AnswerFormatRegexsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_AnswerFormatRegex_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceAnswerFormatRegex_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_ConstraintssequenceFreeTextAnswerTypeschema_Constraints_TxsdFreeTextAnswerTypeSequenceConstraints_ struct {
	Constraints *TxsdFreeTextAnswerTypeSequenceConstraints `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd Constraints"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_ConstraintssequenceFreeTextAnswerTypeschema_Constraints_TxsdFreeTextAnswerTypeSequenceConstraints_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ConstraintssequenceFreeTextAnswerTypeschema_Constraints_TxsdFreeTextAnswerTypeSequenceConstraints_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_ConstraintssequenceFreeTextAnswerTypeschema_Constraints_TxsdFreeTextAnswerTypeSequenceConstraints_ instance.
func (me *XsdGoPkgHasElem_ConstraintssequenceFreeTextAnswerTypeschema_Constraints_TxsdFreeTextAnswerTypeSequenceConstraints_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_ConstraintssequenceFreeTextAnswerTypeschema_Constraints_TxsdFreeTextAnswerTypeSequenceConstraints_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.Constraints.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_DefaultTextsequenceFreeTextAnswerTypeschema_DefaultText_XsdtString_ struct {
	DefaultText xsdt.String `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd DefaultText"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_DefaultTextsequenceFreeTextAnswerTypeschema_DefaultText_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_DefaultTextsequenceFreeTextAnswerTypeschema_DefaultText_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_DefaultTextsequenceFreeTextAnswerTypeschema_DefaultText_XsdtString_ instance.
func (me *XsdGoPkgHasElem_DefaultTextsequenceFreeTextAnswerTypeschema_DefaultText_XsdtString_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_DefaultTextsequenceFreeTextAnswerTypeschema_DefaultText_XsdtString_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_NumberOfLinesSuggestionsequenceFreeTextAnswerTypeschema_NumberOfLinesSuggestion_XsdtPositiveInteger_ struct {
	NumberOfLinesSuggestion xsdt.PositiveInteger `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd NumberOfLinesSuggestion"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_NumberOfLinesSuggestionsequenceFreeTextAnswerTypeschema_NumberOfLinesSuggestion_XsdtPositiveInteger_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_NumberOfLinesSuggestionsequenceFreeTextAnswerTypeschema_NumberOfLinesSuggestion_XsdtPositiveInteger_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_NumberOfLinesSuggestionsequenceFreeTextAnswerTypeschema_NumberOfLinesSuggestion_XsdtPositiveInteger_ instance.
func (me *XsdGoPkgHasElem_NumberOfLinesSuggestionsequenceFreeTextAnswerTypeschema_NumberOfLinesSuggestion_XsdtPositiveInteger_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_NumberOfLinesSuggestionsequenceFreeTextAnswerTypeschema_NumberOfLinesSuggestion_XsdtPositiveInteger_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TFreeTextAnswerType struct {
	XsdGoPkgHasElem_ConstraintssequenceFreeTextAnswerTypeschema_Constraints_TxsdFreeTextAnswerTypeSequenceConstraints_

	XsdGoPkgHasElem_DefaultTextsequenceFreeTextAnswerTypeschema_DefaultText_XsdtString_

	XsdGoPkgHasElem_NumberOfLinesSuggestionsequenceFreeTextAnswerTypeschema_NumberOfLinesSuggestion_XsdtPositiveInteger_
}

//	If the WalkHandlers.TFreeTextAnswerType function is not nil (ie. was set by outside code), calls it with this TFreeTextAnswerType instance as the single argument. Then calls the Walk() method on 3/3 embed(s) and 0/0 field(s) belonging to this TFreeTextAnswerType instance.
func (me *TFreeTextAnswerType) Walk() (err error) {
	if fn := WalkHandlers.TFreeTextAnswerType; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElem_ConstraintssequenceFreeTextAnswerTypeschema_Constraints_TxsdFreeTextAnswerTypeSequenceConstraints_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_DefaultTextsequenceFreeTextAnswerTypeschema_DefaultText_XsdtString_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_NumberOfLinesSuggestionsequenceFreeTextAnswerTypeschema_NumberOfLinesSuggestion_XsdtPositiveInteger_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_FreeTextAnswerchoiceAnswerSpecificationTypeschema_FreeTextAnswer_TFreeTextAnswerType_ struct {
	FreeTextAnswer *TFreeTextAnswerType `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd FreeTextAnswer"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_FreeTextAnswerchoiceAnswerSpecificationTypeschema_FreeTextAnswer_TFreeTextAnswerType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_FreeTextAnswerchoiceAnswerSpecificationTypeschema_FreeTextAnswer_TFreeTextAnswerType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_FreeTextAnswerchoiceAnswerSpecificationTypeschema_FreeTextAnswer_TFreeTextAnswerType_ instance.
func (me *XsdGoPkgHasElem_FreeTextAnswerchoiceAnswerSpecificationTypeschema_FreeTextAnswer_TFreeTextAnswerType_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_FreeTextAnswerchoiceAnswerSpecificationTypeschema_FreeTextAnswer_TFreeTextAnswerType_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.FreeTextAnswer.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_MinSelectionCountsequenceSelectionAnswerTypeschema_MinSelectionCount_XsdtNonNegativeInteger_ struct {
	MinSelectionCount xsdt.NonNegativeInteger `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd MinSelectionCount"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_MinSelectionCountsequenceSelectionAnswerTypeschema_MinSelectionCount_XsdtNonNegativeInteger_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_MinSelectionCountsequenceSelectionAnswerTypeschema_MinSelectionCount_XsdtNonNegativeInteger_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_MinSelectionCountsequenceSelectionAnswerTypeschema_MinSelectionCount_XsdtNonNegativeInteger_ instance.
func (me *XsdGoPkgHasElem_MinSelectionCountsequenceSelectionAnswerTypeschema_MinSelectionCount_XsdtNonNegativeInteger_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_MinSelectionCountsequenceSelectionAnswerTypeschema_MinSelectionCount_XsdtNonNegativeInteger_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_MaxSelectionCountsequenceSelectionAnswerTypeschema_MaxSelectionCount_XsdtPositiveInteger_ struct {
	MaxSelectionCount xsdt.PositiveInteger `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd MaxSelectionCount"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_MaxSelectionCountsequenceSelectionAnswerTypeschema_MaxSelectionCount_XsdtPositiveInteger_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_MaxSelectionCountsequenceSelectionAnswerTypeschema_MaxSelectionCount_XsdtPositiveInteger_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_MaxSelectionCountsequenceSelectionAnswerTypeschema_MaxSelectionCount_XsdtPositiveInteger_ instance.
func (me *XsdGoPkgHasElem_MaxSelectionCountsequenceSelectionAnswerTypeschema_MaxSelectionCount_XsdtPositiveInteger_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_MaxSelectionCountsequenceSelectionAnswerTypeschema_MaxSelectionCount_XsdtPositiveInteger_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TxsdSelectionAnswerTypeSequenceStyleSuggestion xsdt.String

//	Since TxsdSelectionAnswerTypeSequenceStyleSuggestion is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdSelectionAnswerTypeSequenceStyleSuggestion) Set(s string) { (*xsdt.String)(me).Set(s) }

//	Since TxsdSelectionAnswerTypeSequenceStyleSuggestion is just a simple String type, this merely returns the current string value.
func (me TxsdSelectionAnswerTypeSequenceStyleSuggestion) String() string {
	return xsdt.String(me).String()
}

//	Returns true if the value of this enumerated TxsdSelectionAnswerTypeSequenceStyleSuggestion is "radiobutton".
func (me TxsdSelectionAnswerTypeSequenceStyleSuggestion) IsRadiobutton() bool {
	return me.String() == "radiobutton"
}

//	Returns true if the value of this enumerated TxsdSelectionAnswerTypeSequenceStyleSuggestion is "list".
func (me TxsdSelectionAnswerTypeSequenceStyleSuggestion) IsList() bool { return me.String() == "list" }

//	This convenience method just performs a simple type conversion to TxsdSelectionAnswerTypeSequenceStyleSuggestion's alias type xsdt.String.
func (me TxsdSelectionAnswerTypeSequenceStyleSuggestion) ToXsdtString() xsdt.String {
	return xsdt.String(me)
}

//	Returns true if the value of this enumerated TxsdSelectionAnswerTypeSequenceStyleSuggestion is "checkbox".
func (me TxsdSelectionAnswerTypeSequenceStyleSuggestion) IsCheckbox() bool {
	return me.String() == "checkbox"
}

//	Returns true if the value of this enumerated TxsdSelectionAnswerTypeSequenceStyleSuggestion is "dropdown".
func (me TxsdSelectionAnswerTypeSequenceStyleSuggestion) IsDropdown() bool {
	return me.String() == "dropdown"
}

//	Returns true if the value of this enumerated TxsdSelectionAnswerTypeSequenceStyleSuggestion is "combobox".
func (me TxsdSelectionAnswerTypeSequenceStyleSuggestion) IsCombobox() bool {
	return me.String() == "combobox"
}

//	Returns true if the value of this enumerated TxsdSelectionAnswerTypeSequenceStyleSuggestion is "multichooser".
func (me TxsdSelectionAnswerTypeSequenceStyleSuggestion) IsMultichooser() bool {
	return me.String() == "multichooser"
}

type XsdGoPkgHasElem_StyleSuggestionsequenceSelectionAnswerTypeschema_StyleSuggestion_TxsdSelectionAnswerTypeSequenceStyleSuggestion_ struct {
	StyleSuggestion TxsdSelectionAnswerTypeSequenceStyleSuggestion `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd StyleSuggestion"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_StyleSuggestionsequenceSelectionAnswerTypeschema_StyleSuggestion_TxsdSelectionAnswerTypeSequenceStyleSuggestion_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_StyleSuggestionsequenceSelectionAnswerTypeschema_StyleSuggestion_TxsdSelectionAnswerTypeSequenceStyleSuggestion_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_StyleSuggestionsequenceSelectionAnswerTypeschema_StyleSuggestion_TxsdSelectionAnswerTypeSequenceStyleSuggestion_ instance.
func (me *XsdGoPkgHasElem_StyleSuggestionsequenceSelectionAnswerTypeschema_StyleSuggestion_TxsdSelectionAnswerTypeSequenceStyleSuggestion_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_StyleSuggestionsequenceSelectionAnswerTypeschema_StyleSuggestion_TxsdSelectionAnswerTypeSequenceStyleSuggestion_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_FormattedContentchoicesequenceTxsdSelectionAnswerTypeSequenceSelectionsSequenceSelectionSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_FormattedContent_XsdtString_ struct {
	FormattedContent xsdt.String `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd FormattedContent"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_FormattedContentchoicesequenceTxsdSelectionAnswerTypeSequenceSelectionsSequenceSelectionSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_FormattedContent_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_FormattedContentchoicesequenceTxsdSelectionAnswerTypeSequenceSelectionsSequenceSelectionSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_FormattedContent_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_FormattedContentchoicesequenceTxsdSelectionAnswerTypeSequenceSelectionsSequenceSelectionSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_FormattedContent_XsdtString_ instance.
func (me *XsdGoPkgHasElem_FormattedContentchoicesequenceTxsdSelectionAnswerTypeSequenceSelectionsSequenceSelectionSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_FormattedContent_XsdtString_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_FormattedContentchoicesequenceTxsdSelectionAnswerTypeSequenceSelectionsSequenceSelectionSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_FormattedContent_XsdtString_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_SelectionIdentifiersequenceTxsdSelectionAnswerTypeSequenceSelectionsSequenceSelectionSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_SelectionIdentifier_XsdtString_ struct {
	SelectionIdentifier xsdt.String `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd SelectionIdentifier"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_SelectionIdentifiersequenceTxsdSelectionAnswerTypeSequenceSelectionsSequenceSelectionSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_SelectionIdentifier_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_SelectionIdentifiersequenceTxsdSelectionAnswerTypeSequenceSelectionsSequenceSelectionSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_SelectionIdentifier_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_SelectionIdentifiersequenceTxsdSelectionAnswerTypeSequenceSelectionsSequenceSelectionSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_SelectionIdentifier_XsdtString_ instance.
func (me *XsdGoPkgHasElem_SelectionIdentifiersequenceTxsdSelectionAnswerTypeSequenceSelectionsSequenceSelectionSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_SelectionIdentifier_XsdtString_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_SelectionIdentifiersequenceTxsdSelectionAnswerTypeSequenceSelectionsSequenceSelectionSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_SelectionIdentifier_XsdtString_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_TextchoicesequenceTxsdSelectionAnswerTypeSequenceSelectionsSequenceSelectionSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_Text_XsdtString_ struct {
	Text xsdt.String `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd Text"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_TextchoicesequenceTxsdSelectionAnswerTypeSequenceSelectionsSequenceSelectionSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_Text_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_TextchoicesequenceTxsdSelectionAnswerTypeSequenceSelectionsSequenceSelectionSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_Text_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_TextchoicesequenceTxsdSelectionAnswerTypeSequenceSelectionsSequenceSelectionSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_Text_XsdtString_ instance.
func (me *XsdGoPkgHasElem_TextchoicesequenceTxsdSelectionAnswerTypeSequenceSelectionsSequenceSelectionSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_Text_XsdtString_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_TextchoicesequenceTxsdSelectionAnswerTypeSequenceSelectionsSequenceSelectionSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_Text_XsdtString_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_BinarychoicesequenceTxsdSelectionAnswerTypeSequenceSelectionsSequenceSelectionSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_Binary_TBinaryContentType_ struct {
	Binary *TBinaryContentType `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd Binary"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_BinarychoicesequenceTxsdSelectionAnswerTypeSequenceSelectionsSequenceSelectionSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_Binary_TBinaryContentType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_BinarychoicesequenceTxsdSelectionAnswerTypeSequenceSelectionsSequenceSelectionSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_Binary_TBinaryContentType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_BinarychoicesequenceTxsdSelectionAnswerTypeSequenceSelectionsSequenceSelectionSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_Binary_TBinaryContentType_ instance.
func (me *XsdGoPkgHasElem_BinarychoicesequenceTxsdSelectionAnswerTypeSequenceSelectionsSequenceSelectionSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_Binary_TBinaryContentType_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_BinarychoicesequenceTxsdSelectionAnswerTypeSequenceSelectionsSequenceSelectionSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_Binary_TBinaryContentType_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.Binary.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TxsdSelectionAnswerTypeSequenceSelectionsSequenceSelection struct {
	XsdGoPkgHasElem_BinarychoicesequenceTxsdSelectionAnswerTypeSequenceSelectionsSequenceSelectionSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_Binary_TBinaryContentType_

	XsdGoPkgHasElem_FormattedContentchoicesequenceTxsdSelectionAnswerTypeSequenceSelectionsSequenceSelectionSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_FormattedContent_XsdtString_

	XsdGoPkgHasElem_SelectionIdentifiersequenceTxsdSelectionAnswerTypeSequenceSelectionsSequenceSelectionSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_SelectionIdentifier_XsdtString_

	XsdGoPkgHasElem_TextchoicesequenceTxsdSelectionAnswerTypeSequenceSelectionsSequenceSelectionSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_Text_XsdtString_
}

//	If the WalkHandlers.TxsdSelectionAnswerTypeSequenceSelectionsSequenceSelection function is not nil (ie. was set by outside code), calls it with this TxsdSelectionAnswerTypeSequenceSelectionsSequenceSelection instance as the single argument. Then calls the Walk() method on 4/4 embed(s) and 0/0 field(s) belonging to this TxsdSelectionAnswerTypeSequenceSelectionsSequenceSelection instance.
func (me *TxsdSelectionAnswerTypeSequenceSelectionsSequenceSelection) Walk() (err error) {
	if fn := WalkHandlers.TxsdSelectionAnswerTypeSequenceSelectionsSequenceSelection; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElem_FormattedContentchoicesequenceTxsdSelectionAnswerTypeSequenceSelectionsSequenceSelectionSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_FormattedContent_XsdtString_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_SelectionIdentifiersequenceTxsdSelectionAnswerTypeSequenceSelectionsSequenceSelectionSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_SelectionIdentifier_XsdtString_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_TextchoicesequenceTxsdSelectionAnswerTypeSequenceSelectionsSequenceSelectionSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_Text_XsdtString_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_BinarychoicesequenceTxsdSelectionAnswerTypeSequenceSelectionsSequenceSelectionSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_Binary_TBinaryContentType_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_SelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_Selection_TxsdSelectionAnswerTypeSequenceSelectionsSequenceSelection_ struct {
	Selections []*TxsdSelectionAnswerTypeSequenceSelectionsSequenceSelection `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd Selection"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_SelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_Selection_TxsdSelectionAnswerTypeSequenceSelectionsSequenceSelection_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_SelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_Selection_TxsdSelectionAnswerTypeSequenceSelectionsSequenceSelection_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_SelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_Selection_TxsdSelectionAnswerTypeSequenceSelectionsSequenceSelection_ instance.
func (me *XsdGoPkgHasElems_SelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_Selection_TxsdSelectionAnswerTypeSequenceSelectionsSequenceSelection_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_SelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_Selection_TxsdSelectionAnswerTypeSequenceSelectionsSequenceSelection_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.Selections {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_OtherSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_OtherSelection_TFreeTextAnswerType_ struct {
	OtherSelection *TFreeTextAnswerType `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd OtherSelection"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_OtherSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_OtherSelection_TFreeTextAnswerType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_OtherSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_OtherSelection_TFreeTextAnswerType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_OtherSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_OtherSelection_TFreeTextAnswerType_ instance.
func (me *XsdGoPkgHasElem_OtherSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_OtherSelection_TFreeTextAnswerType_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_OtherSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_OtherSelection_TFreeTextAnswerType_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.OtherSelection.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TxsdSelectionAnswerTypeSequenceSelections struct {
	XsdGoPkgHasElems_SelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_Selection_TxsdSelectionAnswerTypeSequenceSelectionsSequenceSelection_

	XsdGoPkgHasElem_OtherSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_OtherSelection_TFreeTextAnswerType_
}

//	If the WalkHandlers.TxsdSelectionAnswerTypeSequenceSelections function is not nil (ie. was set by outside code), calls it with this TxsdSelectionAnswerTypeSequenceSelections instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TxsdSelectionAnswerTypeSequenceSelections instance.
func (me *TxsdSelectionAnswerTypeSequenceSelections) Walk() (err error) {
	if fn := WalkHandlers.TxsdSelectionAnswerTypeSequenceSelections; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElem_OtherSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_OtherSelection_TFreeTextAnswerType_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElems_SelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_Selection_TxsdSelectionAnswerTypeSequenceSelectionsSequenceSelection_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_SelectionssequenceSelectionAnswerTypeschema_Selections_TxsdSelectionAnswerTypeSequenceSelections_ struct {
	Selections *TxsdSelectionAnswerTypeSequenceSelections `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd Selections"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_SelectionssequenceSelectionAnswerTypeschema_Selections_TxsdSelectionAnswerTypeSequenceSelections_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_SelectionssequenceSelectionAnswerTypeschema_Selections_TxsdSelectionAnswerTypeSequenceSelections_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_SelectionssequenceSelectionAnswerTypeschema_Selections_TxsdSelectionAnswerTypeSequenceSelections_ instance.
func (me *XsdGoPkgHasElem_SelectionssequenceSelectionAnswerTypeschema_Selections_TxsdSelectionAnswerTypeSequenceSelections_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_SelectionssequenceSelectionAnswerTypeschema_Selections_TxsdSelectionAnswerTypeSequenceSelections_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.Selections.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TSelectionAnswerType struct {
	XsdGoPkgHasElem_MinSelectionCountsequenceSelectionAnswerTypeschema_MinSelectionCount_XsdtNonNegativeInteger_

	XsdGoPkgHasElem_MaxSelectionCountsequenceSelectionAnswerTypeschema_MaxSelectionCount_XsdtPositiveInteger_

	XsdGoPkgHasElem_StyleSuggestionsequenceSelectionAnswerTypeschema_StyleSuggestion_TxsdSelectionAnswerTypeSequenceStyleSuggestion_

	XsdGoPkgHasElem_SelectionssequenceSelectionAnswerTypeschema_Selections_TxsdSelectionAnswerTypeSequenceSelections_
}

//	If the WalkHandlers.TSelectionAnswerType function is not nil (ie. was set by outside code), calls it with this TSelectionAnswerType instance as the single argument. Then calls the Walk() method on 4/4 embed(s) and 0/0 field(s) belonging to this TSelectionAnswerType instance.
func (me *TSelectionAnswerType) Walk() (err error) {
	if fn := WalkHandlers.TSelectionAnswerType; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElem_MaxSelectionCountsequenceSelectionAnswerTypeschema_MaxSelectionCount_XsdtPositiveInteger_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_StyleSuggestionsequenceSelectionAnswerTypeschema_StyleSuggestion_TxsdSelectionAnswerTypeSequenceStyleSuggestion_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_SelectionssequenceSelectionAnswerTypeschema_Selections_TxsdSelectionAnswerTypeSequenceSelections_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_MinSelectionCountsequenceSelectionAnswerTypeschema_MinSelectionCount_XsdtNonNegativeInteger_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_SelectionAnswerchoiceAnswerSpecificationTypeschema_SelectionAnswer_TSelectionAnswerType_ struct {
	SelectionAnswer *TSelectionAnswerType `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd SelectionAnswer"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_SelectionAnswerchoiceAnswerSpecificationTypeschema_SelectionAnswer_TSelectionAnswerType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_SelectionAnswerchoiceAnswerSpecificationTypeschema_SelectionAnswer_TSelectionAnswerType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_SelectionAnswerchoiceAnswerSpecificationTypeschema_SelectionAnswer_TSelectionAnswerType_ instance.
func (me *XsdGoPkgHasElem_SelectionAnswerchoiceAnswerSpecificationTypeschema_SelectionAnswer_TSelectionAnswerType_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_SelectionAnswerchoiceAnswerSpecificationTypeschema_SelectionAnswer_TSelectionAnswerType_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.SelectionAnswer.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TMaxFileSizeType xsdt.PositiveInteger

//	Returns a string representation of this TMaxFileSizeType's current non-string scalar value.
func (me TMaxFileSizeType) String() string { return xsdt.PositiveInteger(me).String() }

//	This convenience method just performs a simple type conversion to TMaxFileSizeType's alias type xsdt.PositiveInteger.
func (me TMaxFileSizeType) ToXsdtPositiveInteger() xsdt.PositiveInteger {
	return xsdt.PositiveInteger(me)
}

//	Since TMaxFileSizeType is a non-string scalar type (either boolean or numeric), sets the current value obtained from parsing the specified string.
func (me *TMaxFileSizeType) Set(s string) { (*xsdt.PositiveInteger)(me).Set(s) }

type XsdGoPkgHasElem_MaxFileSizeInBytessequenceFileUploadAnswerTypeschema_MaxFileSizeInBytes_TMaxFileSizeType_ struct {
	MaxFileSizeInBytes TMaxFileSizeType `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd MaxFileSizeInBytes"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_MaxFileSizeInBytessequenceFileUploadAnswerTypeschema_MaxFileSizeInBytes_TMaxFileSizeType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_MaxFileSizeInBytessequenceFileUploadAnswerTypeschema_MaxFileSizeInBytes_TMaxFileSizeType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_MaxFileSizeInBytessequenceFileUploadAnswerTypeschema_MaxFileSizeInBytes_TMaxFileSizeType_ instance.
func (me *XsdGoPkgHasElem_MaxFileSizeInBytessequenceFileUploadAnswerTypeschema_MaxFileSizeInBytes_TMaxFileSizeType_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_MaxFileSizeInBytessequenceFileUploadAnswerTypeschema_MaxFileSizeInBytes_TMaxFileSizeType_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TMinFileSizeType xsdt.PositiveInteger

//	Since TMinFileSizeType is a non-string scalar type (either boolean or numeric), sets the current value obtained from parsing the specified string.
func (me *TMinFileSizeType) Set(s string) { (*xsdt.PositiveInteger)(me).Set(s) }

//	Returns a string representation of this TMinFileSizeType's current non-string scalar value.
func (me TMinFileSizeType) String() string { return xsdt.PositiveInteger(me).String() }

//	This convenience method just performs a simple type conversion to TMinFileSizeType's alias type xsdt.PositiveInteger.
func (me TMinFileSizeType) ToXsdtPositiveInteger() xsdt.PositiveInteger {
	return xsdt.PositiveInteger(me)
}

type XsdGoPkgHasElem_MinFileSizeInBytessequenceFileUploadAnswerTypeschema_MinFileSizeInBytes_TMinFileSizeType_ struct {
	MinFileSizeInBytes TMinFileSizeType `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd MinFileSizeInBytes"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_MinFileSizeInBytessequenceFileUploadAnswerTypeschema_MinFileSizeInBytes_TMinFileSizeType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_MinFileSizeInBytessequenceFileUploadAnswerTypeschema_MinFileSizeInBytes_TMinFileSizeType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_MinFileSizeInBytessequenceFileUploadAnswerTypeschema_MinFileSizeInBytes_TMinFileSizeType_ instance.
func (me *XsdGoPkgHasElem_MinFileSizeInBytessequenceFileUploadAnswerTypeschema_MinFileSizeInBytes_TMinFileSizeType_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_MinFileSizeInBytessequenceFileUploadAnswerTypeschema_MinFileSizeInBytes_TMinFileSizeType_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TFileUploadAnswerType struct {
	XsdGoPkgHasElem_MaxFileSizeInBytessequenceFileUploadAnswerTypeschema_MaxFileSizeInBytes_TMaxFileSizeType_

	XsdGoPkgHasElem_MinFileSizeInBytessequenceFileUploadAnswerTypeschema_MinFileSizeInBytes_TMinFileSizeType_
}

//	If the WalkHandlers.TFileUploadAnswerType function is not nil (ie. was set by outside code), calls it with this TFileUploadAnswerType instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TFileUploadAnswerType instance.
func (me *TFileUploadAnswerType) Walk() (err error) {
	if fn := WalkHandlers.TFileUploadAnswerType; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElem_MaxFileSizeInBytessequenceFileUploadAnswerTypeschema_MaxFileSizeInBytes_TMaxFileSizeType_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_MinFileSizeInBytessequenceFileUploadAnswerTypeschema_MinFileSizeInBytes_TMinFileSizeType_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_FileUploadAnswerchoiceAnswerSpecificationTypeschema_FileUploadAnswer_TFileUploadAnswerType_ struct {
	FileUploadAnswer *TFileUploadAnswerType `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd FileUploadAnswer"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_FileUploadAnswerchoiceAnswerSpecificationTypeschema_FileUploadAnswer_TFileUploadAnswerType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_FileUploadAnswerchoiceAnswerSpecificationTypeschema_FileUploadAnswer_TFileUploadAnswerType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_FileUploadAnswerchoiceAnswerSpecificationTypeschema_FileUploadAnswer_TFileUploadAnswerType_ instance.
func (me *XsdGoPkgHasElem_FileUploadAnswerchoiceAnswerSpecificationTypeschema_FileUploadAnswer_TFileUploadAnswerType_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_FileUploadAnswerchoiceAnswerSpecificationTypeschema_FileUploadAnswer_TFileUploadAnswerType_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.FileUploadAnswer.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TAnswerSpecificationType struct {
	XsdGoPkgHasElem_FreeTextAnswerchoiceAnswerSpecificationTypeschema_FreeTextAnswer_TFreeTextAnswerType_

	XsdGoPkgHasElem_SelectionAnswerchoiceAnswerSpecificationTypeschema_SelectionAnswer_TSelectionAnswerType_

	XsdGoPkgHasElem_FileUploadAnswerchoiceAnswerSpecificationTypeschema_FileUploadAnswer_TFileUploadAnswerType_
}

//	If the WalkHandlers.TAnswerSpecificationType function is not nil (ie. was set by outside code), calls it with this TAnswerSpecificationType instance as the single argument. Then calls the Walk() method on 3/3 embed(s) and 0/0 field(s) belonging to this TAnswerSpecificationType instance.
func (me *TAnswerSpecificationType) Walk() (err error) {
	if fn := WalkHandlers.TAnswerSpecificationType; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElem_FreeTextAnswerchoiceAnswerSpecificationTypeschema_FreeTextAnswer_TFreeTextAnswerType_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_SelectionAnswerchoiceAnswerSpecificationTypeschema_SelectionAnswer_TSelectionAnswerType_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_FileUploadAnswerchoiceAnswerSpecificationTypeschema_FileUploadAnswer_TFileUploadAnswerType_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_AnswerSpecificationsequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_AnswerSpecification_TAnswerSpecificationType_ struct {
	AnswerSpecification *TAnswerSpecificationType `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd AnswerSpecification"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_AnswerSpecificationsequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_AnswerSpecification_TAnswerSpecificationType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_AnswerSpecificationsequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_AnswerSpecification_TAnswerSpecificationType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_AnswerSpecificationsequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_AnswerSpecification_TAnswerSpecificationType_ instance.
func (me *XsdGoPkgHasElem_AnswerSpecificationsequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_AnswerSpecification_TAnswerSpecificationType_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_AnswerSpecificationsequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_AnswerSpecification_TAnswerSpecificationType_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.AnswerSpecification.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TxsdQuestionFormSequenceChoiceQuestion struct {
	XsdGoPkgHasElem_QuestionIdentifiersequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_QuestionIdentifier_XsdtString_

	XsdGoPkgHasElem_DisplayNamesequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_DisplayName_XsdtString_

	XsdGoPkgHasElem_IsRequiredsequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_IsRequired_XsdtBoolean_

	XsdGoPkgHasElem_QuestionContentsequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_QuestionContent_TContentType_

	XsdGoPkgHasElem_AnswerSpecificationsequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_AnswerSpecification_TAnswerSpecificationType_
}

//	If the WalkHandlers.TxsdQuestionFormSequenceChoiceQuestion function is not nil (ie. was set by outside code), calls it with this TxsdQuestionFormSequenceChoiceQuestion instance as the single argument. Then calls the Walk() method on 5/5 embed(s) and 0/0 field(s) belonging to this TxsdQuestionFormSequenceChoiceQuestion instance.
func (me *TxsdQuestionFormSequenceChoiceQuestion) Walk() (err error) {
	if fn := WalkHandlers.TxsdQuestionFormSequenceChoiceQuestion; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElem_QuestionIdentifiersequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_QuestionIdentifier_XsdtString_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_DisplayNamesequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_DisplayName_XsdtString_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_IsRequiredsequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_IsRequired_XsdtBoolean_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_QuestionContentsequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_QuestionContent_TContentType_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_AnswerSpecificationsequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_AnswerSpecification_TAnswerSpecificationType_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_QuestionchoicesequenceTxsdQuestionFormQuestionFormschema_Question_TxsdQuestionFormSequenceChoiceQuestion_ struct {
	Questions []*TxsdQuestionFormSequenceChoiceQuestion `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd Question"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_QuestionchoicesequenceTxsdQuestionFormQuestionFormschema_Question_TxsdQuestionFormSequenceChoiceQuestion_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_QuestionchoicesequenceTxsdQuestionFormQuestionFormschema_Question_TxsdQuestionFormSequenceChoiceQuestion_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_QuestionchoicesequenceTxsdQuestionFormQuestionFormschema_Question_TxsdQuestionFormSequenceChoiceQuestion_ instance.
func (me *XsdGoPkgHasElems_QuestionchoicesequenceTxsdQuestionFormQuestionFormschema_Question_TxsdQuestionFormSequenceChoiceQuestion_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_QuestionchoicesequenceTxsdQuestionFormQuestionFormschema_Question_TxsdQuestionFormSequenceChoiceQuestion_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.Questions {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TxsdQuestionForm struct {
	XsdGoPkgHasElems_OverviewchoicesequenceTxsdQuestionFormQuestionFormschema_Overview_TContentType_

	XsdGoPkgHasElems_QuestionchoicesequenceTxsdQuestionFormQuestionFormschema_Question_TxsdQuestionFormSequenceChoiceQuestion_
}

//	If the WalkHandlers.TxsdQuestionForm function is not nil (ie. was set by outside code), calls it with this TxsdQuestionForm instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TxsdQuestionForm instance.
func (me *TxsdQuestionForm) Walk() (err error) {
	if fn := WalkHandlers.TxsdQuestionForm; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_OverviewchoicesequenceTxsdQuestionFormQuestionFormschema_Overview_TContentType_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElems_QuestionchoicesequenceTxsdQuestionFormQuestionFormschema_Question_TxsdQuestionFormSequenceChoiceQuestion_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_QuestionForm struct {
	QuestionForm *TxsdQuestionForm `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd QuestionForm"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_QuestionForm function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_QuestionForm instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_QuestionForm instance.
func (me *XsdGoPkgHasElem_QuestionForm) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_QuestionForm; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.QuestionForm.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_QuestionForm struct {
	QuestionForms []*TxsdQuestionForm `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd QuestionForm"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_QuestionForm function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_QuestionForm instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_QuestionForm instance.
func (me *XsdGoPkgHasElems_QuestionForm) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_QuestionForm; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.QuestionForms {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_ApplicationParametersequenceEmbeddedBinaryContentTypeschema_ApplicationParameter_TApplicationParameter_ struct {
	ApplicationParameter *TApplicationParameter `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd ApplicationParameter"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_ApplicationParametersequenceEmbeddedBinaryContentTypeschema_ApplicationParameter_TApplicationParameter_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ApplicationParametersequenceEmbeddedBinaryContentTypeschema_ApplicationParameter_TApplicationParameter_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_ApplicationParametersequenceEmbeddedBinaryContentTypeschema_ApplicationParameter_TApplicationParameter_ instance.
func (me *XsdGoPkgHasElem_ApplicationParametersequenceEmbeddedBinaryContentTypeschema_ApplicationParameter_TApplicationParameter_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_ApplicationParametersequenceEmbeddedBinaryContentTypeschema_ApplicationParameter_TApplicationParameter_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.ApplicationParameter.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_ListItemsequenceListchoiceContentTypeschema_ListItem_XsdtString_ struct {
	ListItem xsdt.String `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd ListItem"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_ListItemsequenceListchoiceContentTypeschema_ListItem_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ListItemsequenceListchoiceContentTypeschema_ListItem_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_ListItemsequenceListchoiceContentTypeschema_ListItem_XsdtString_ instance.
func (me *XsdGoPkgHasElem_ListItemsequenceListchoiceContentTypeschema_ListItem_XsdtString_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_ListItemsequenceListchoiceContentTypeschema_ListItem_XsdtString_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_DataURLsequenceBinaryContentTypeschema_DataURL_TURLType_ struct {
	DataURLs []TURLType `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd DataURL"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_DataURLsequenceBinaryContentTypeschema_DataURL_TURLType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_DataURLsequenceBinaryContentTypeschema_DataURL_TURLType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_DataURLsequenceBinaryContentTypeschema_DataURL_TURLType_ instance.
func (me *XsdGoPkgHasElems_DataURLsequenceBinaryContentTypeschema_DataURL_TURLType_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_DataURLsequenceBinaryContentTypeschema_DataURL_TURLType_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_ConstraintssequenceFreeTextAnswerTypeschema_Constraints_TxsdFreeTextAnswerTypeSequenceConstraints_ struct {
	Constraintses []*TxsdFreeTextAnswerTypeSequenceConstraints `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd Constraints"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_ConstraintssequenceFreeTextAnswerTypeschema_Constraints_TxsdFreeTextAnswerTypeSequenceConstraints_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_ConstraintssequenceFreeTextAnswerTypeschema_Constraints_TxsdFreeTextAnswerTypeSequenceConstraints_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_ConstraintssequenceFreeTextAnswerTypeschema_Constraints_TxsdFreeTextAnswerTypeSequenceConstraints_ instance.
func (me *XsdGoPkgHasElems_ConstraintssequenceFreeTextAnswerTypeschema_Constraints_TxsdFreeTextAnswerTypeSequenceConstraints_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_ConstraintssequenceFreeTextAnswerTypeschema_Constraints_TxsdFreeTextAnswerTypeSequenceConstraints_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.Constraintses {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_QuestionIdentifiersequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_QuestionIdentifier_XsdtString_ struct {
	QuestionIdentifiers []xsdt.String `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd QuestionIdentifier"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_QuestionIdentifiersequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_QuestionIdentifier_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_QuestionIdentifiersequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_QuestionIdentifier_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_QuestionIdentifiersequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_QuestionIdentifier_XsdtString_ instance.
func (me *XsdGoPkgHasElems_QuestionIdentifiersequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_QuestionIdentifier_XsdtString_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_QuestionIdentifiersequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_QuestionIdentifier_XsdtString_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_FlashchoiceApplicationContentTypeschema_Flash_TFlashContentType_ struct {
	Flashs []*TFlashContentType `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd Flash"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_FlashchoiceApplicationContentTypeschema_Flash_TFlashContentType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_FlashchoiceApplicationContentTypeschema_Flash_TFlashContentType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_FlashchoiceApplicationContentTypeschema_Flash_TFlashContentType_ instance.
func (me *XsdGoPkgHasElems_FlashchoiceApplicationContentTypeschema_Flash_TFlashContentType_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_FlashchoiceApplicationContentTypeschema_Flash_TFlashContentType_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.Flashs {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_HeightsequenceEmbeddedBinaryContentTypeschema_Height_XsdtString_ struct {
	Heights []xsdt.String `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd Height"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_HeightsequenceEmbeddedBinaryContentTypeschema_Height_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_HeightsequenceEmbeddedBinaryContentTypeschema_Height_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_HeightsequenceEmbeddedBinaryContentTypeschema_Height_XsdtString_ instance.
func (me *XsdGoPkgHasElems_HeightsequenceEmbeddedBinaryContentTypeschema_Height_XsdtString_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_HeightsequenceEmbeddedBinaryContentTypeschema_Height_XsdtString_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_QuestionContentsequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_QuestionContent_TContentType_ struct {
	QuestionContents []*TContentType `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd QuestionContent"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_QuestionContentsequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_QuestionContent_TContentType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_QuestionContentsequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_QuestionContent_TContentType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_QuestionContentsequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_QuestionContent_TContentType_ instance.
func (me *XsdGoPkgHasElems_QuestionContentsequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_QuestionContent_TContentType_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_QuestionContentsequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_QuestionContent_TContentType_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.QuestionContents {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_IsNumericsequenceConstraintssequenceFreeTextAnswerTypeschema_IsNumeric_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceIsNumeric_ struct {
	IsNumerics []*TxsdFreeTextAnswerTypeSequenceConstraintsSequenceIsNumeric `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd IsNumeric"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_IsNumericsequenceConstraintssequenceFreeTextAnswerTypeschema_IsNumeric_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceIsNumeric_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_IsNumericsequenceConstraintssequenceFreeTextAnswerTypeschema_IsNumeric_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceIsNumeric_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_IsNumericsequenceConstraintssequenceFreeTextAnswerTypeschema_IsNumeric_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceIsNumeric_ instance.
func (me *XsdGoPkgHasElems_IsNumericsequenceConstraintssequenceFreeTextAnswerTypeschema_IsNumeric_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceIsNumeric_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_IsNumericsequenceConstraintssequenceFreeTextAnswerTypeschema_IsNumeric_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceIsNumeric_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.IsNumerics {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_WidthsequenceJavaAppletContentTypeschema_Width_XsdtString_ struct {
	Widths []xsdt.String `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd Width"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_WidthsequenceJavaAppletContentTypeschema_Width_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_WidthsequenceJavaAppletContentTypeschema_Width_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_WidthsequenceJavaAppletContentTypeschema_Width_XsdtString_ instance.
func (me *XsdGoPkgHasElems_WidthsequenceJavaAppletContentTypeschema_Width_XsdtString_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_WidthsequenceJavaAppletContentTypeschema_Width_XsdtString_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_AltTextsequenceBinaryContentTypeschema_AltText_XsdtString_ struct {
	AltTexts []xsdt.String `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd AltText"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_AltTextsequenceBinaryContentTypeschema_AltText_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_AltTextsequenceBinaryContentTypeschema_AltText_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_AltTextsequenceBinaryContentTypeschema_AltText_XsdtString_ instance.
func (me *XsdGoPkgHasElems_AltTextsequenceBinaryContentTypeschema_AltText_XsdtString_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_AltTextsequenceBinaryContentTypeschema_AltText_XsdtString_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_ListchoiceContentTypeschema_List_TxsdContentTypeChoiceList_ struct {
	List *TxsdContentTypeChoiceList `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd List"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_ListchoiceContentTypeschema_List_TxsdContentTypeChoiceList_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ListchoiceContentTypeschema_List_TxsdContentTypeChoiceList_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_ListchoiceContentTypeschema_List_TxsdContentTypeChoiceList_ instance.
func (me *XsdGoPkgHasElem_ListchoiceContentTypeschema_List_TxsdContentTypeChoiceList_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_ListchoiceContentTypeschema_List_TxsdContentTypeChoiceList_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.List.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_StyleSuggestionsequenceSelectionAnswerTypeschema_StyleSuggestion_TxsdSelectionAnswerTypeSequenceStyleSuggestion_ struct {
	StyleSuggestions []TxsdSelectionAnswerTypeSequenceStyleSuggestion `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd StyleSuggestion"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_StyleSuggestionsequenceSelectionAnswerTypeschema_StyleSuggestion_TxsdSelectionAnswerTypeSequenceStyleSuggestion_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_StyleSuggestionsequenceSelectionAnswerTypeschema_StyleSuggestion_TxsdSelectionAnswerTypeSequenceStyleSuggestion_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_StyleSuggestionsequenceSelectionAnswerTypeschema_StyleSuggestion_TxsdSelectionAnswerTypeSequenceStyleSuggestion_ instance.
func (me *XsdGoPkgHasElems_StyleSuggestionsequenceSelectionAnswerTypeschema_StyleSuggestion_TxsdSelectionAnswerTypeSequenceStyleSuggestion_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_StyleSuggestionsequenceSelectionAnswerTypeschema_StyleSuggestion_TxsdSelectionAnswerTypeSequenceStyleSuggestion_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_SelectionIdentifiersequenceSelectionsequenceSelectionssequenceSelectionAnswerTypeschema_SelectionIdentifier_XsdtString_ struct {
	SelectionIdentifiers []xsdt.String `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd SelectionIdentifier"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_SelectionIdentifiersequenceSelectionsequenceSelectionssequenceSelectionAnswerTypeschema_SelectionIdentifier_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_SelectionIdentifiersequenceSelectionsequenceSelectionssequenceSelectionAnswerTypeschema_SelectionIdentifier_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_SelectionIdentifiersequenceSelectionsequenceSelectionssequenceSelectionAnswerTypeschema_SelectionIdentifier_XsdtString_ instance.
func (me *XsdGoPkgHasElems_SelectionIdentifiersequenceSelectionsequenceSelectionssequenceSelectionAnswerTypeschema_SelectionIdentifier_XsdtString_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_SelectionIdentifiersequenceSelectionsequenceSelectionssequenceSelectionAnswerTypeschema_SelectionIdentifier_XsdtString_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_EmbeddedMimeTypesequenceEmbeddedBinaryContentTypeschema_EmbeddedMimeType_TEmbeddedMimeType_ struct {
	EmbeddedMimeTypes []*TEmbeddedMimeType `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd EmbeddedMimeType"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_EmbeddedMimeTypesequenceEmbeddedBinaryContentTypeschema_EmbeddedMimeType_TEmbeddedMimeType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_EmbeddedMimeTypesequenceEmbeddedBinaryContentTypeschema_EmbeddedMimeType_TEmbeddedMimeType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_EmbeddedMimeTypesequenceEmbeddedBinaryContentTypeschema_EmbeddedMimeType_TEmbeddedMimeType_ instance.
func (me *XsdGoPkgHasElems_EmbeddedMimeTypesequenceEmbeddedBinaryContentTypeschema_EmbeddedMimeType_TEmbeddedMimeType_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_EmbeddedMimeTypesequenceEmbeddedBinaryContentTypeschema_EmbeddedMimeType_TEmbeddedMimeType_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.EmbeddedMimeTypes {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_NamesequenceApplicationParameterschema_Name_XsdtString_ struct {
	Names []xsdt.String `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd Name"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_NamesequenceApplicationParameterschema_Name_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_NamesequenceApplicationParameterschema_Name_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_NamesequenceApplicationParameterschema_Name_XsdtString_ instance.
func (me *XsdGoPkgHasElems_NamesequenceApplicationParameterschema_Name_XsdtString_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_NamesequenceApplicationParameterschema_Name_XsdtString_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_DisplayNamesequenceQuestionchoicesequenceQuestionFormschema_DisplayName_XsdtString_ struct {
	DisplayNames []xsdt.String `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd DisplayName"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_DisplayNamesequenceQuestionchoicesequenceQuestionFormschema_DisplayName_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_DisplayNamesequenceQuestionchoicesequenceQuestionFormschema_DisplayName_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_DisplayNamesequenceQuestionchoicesequenceQuestionFormschema_DisplayName_XsdtString_ instance.
func (me *XsdGoPkgHasElems_DisplayNamesequenceQuestionchoicesequenceQuestionFormschema_DisplayName_XsdtString_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_DisplayNamesequenceQuestionchoicesequenceQuestionFormschema_DisplayName_XsdtString_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_SubTypesequenceEmbeddedMimeTypeschema_SubType_XsdtString_ struct {
	SubTypes []xsdt.String `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd SubType"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_SubTypesequenceEmbeddedMimeTypeschema_SubType_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_SubTypesequenceEmbeddedMimeTypeschema_SubType_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_SubTypesequenceEmbeddedMimeTypeschema_SubType_XsdtString_ instance.
func (me *XsdGoPkgHasElems_SubTypesequenceEmbeddedMimeTypeschema_SubType_XsdtString_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_SubTypesequenceEmbeddedMimeTypeschema_SubType_XsdtString_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_ApplicationchoiceContentTypeschema_Application_TApplicationContentType_ struct {
	Application *TApplicationContentType `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd Application"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_ApplicationchoiceContentTypeschema_Application_TApplicationContentType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ApplicationchoiceContentTypeschema_Application_TApplicationContentType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_ApplicationchoiceContentTypeschema_Application_TApplicationContentType_ instance.
func (me *XsdGoPkgHasElem_ApplicationchoiceContentTypeschema_Application_TApplicationContentType_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_ApplicationchoiceContentTypeschema_Application_TApplicationContentType_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.Application.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_IsRequiredsequenceQuestionchoicesequenceQuestionFormschema_IsRequired_XsdtBoolean_ struct {
	IsRequireds []xsdt.Boolean `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd IsRequired"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_IsRequiredsequenceQuestionchoicesequenceQuestionFormschema_IsRequired_XsdtBoolean_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_IsRequiredsequenceQuestionchoicesequenceQuestionFormschema_IsRequired_XsdtBoolean_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_IsRequiredsequenceQuestionchoicesequenceQuestionFormschema_IsRequired_XsdtBoolean_ instance.
func (me *XsdGoPkgHasElems_IsRequiredsequenceQuestionchoicesequenceQuestionFormschema_IsRequired_XsdtBoolean_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_IsRequiredsequenceQuestionchoicesequenceQuestionFormschema_IsRequired_XsdtBoolean_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_DefaultTextsequenceFreeTextAnswerTypeschema_DefaultText_XsdtString_ struct {
	DefaultTexts []xsdt.String `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd DefaultText"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_DefaultTextsequenceFreeTextAnswerTypeschema_DefaultText_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_DefaultTextsequenceFreeTextAnswerTypeschema_DefaultText_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_DefaultTextsequenceFreeTextAnswerTypeschema_DefaultText_XsdtString_ instance.
func (me *XsdGoPkgHasElems_DefaultTextsequenceFreeTextAnswerTypeschema_DefaultText_XsdtString_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_DefaultTextsequenceFreeTextAnswerTypeschema_DefaultText_XsdtString_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_NumberOfLinesSuggestionsequenceFreeTextAnswerTypeschema_NumberOfLinesSuggestion_XsdtPositiveInteger_ struct {
	NumberOfLinesSuggestions []xsdt.PositiveInteger `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd NumberOfLinesSuggestion"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_NumberOfLinesSuggestionsequenceFreeTextAnswerTypeschema_NumberOfLinesSuggestion_XsdtPositiveInteger_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_NumberOfLinesSuggestionsequenceFreeTextAnswerTypeschema_NumberOfLinesSuggestion_XsdtPositiveInteger_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_NumberOfLinesSuggestionsequenceFreeTextAnswerTypeschema_NumberOfLinesSuggestion_XsdtPositiveInteger_ instance.
func (me *XsdGoPkgHasElems_NumberOfLinesSuggestionsequenceFreeTextAnswerTypeschema_NumberOfLinesSuggestion_XsdtPositiveInteger_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_NumberOfLinesSuggestionsequenceFreeTextAnswerTypeschema_NumberOfLinesSuggestion_XsdtPositiveInteger_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_AppletFilenamesequenceJavaAppletContentTypeschema_AppletFilename_XsdtString_ struct {
	AppletFilenames []xsdt.String `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd AppletFilename"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_AppletFilenamesequenceJavaAppletContentTypeschema_AppletFilename_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_AppletFilenamesequenceJavaAppletContentTypeschema_AppletFilename_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_AppletFilenamesequenceJavaAppletContentTypeschema_AppletFilename_XsdtString_ instance.
func (me *XsdGoPkgHasElems_AppletFilenamesequenceJavaAppletContentTypeschema_AppletFilename_XsdtString_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_AppletFilenamesequenceJavaAppletContentTypeschema_AppletFilename_XsdtString_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_OtherSelectionsequenceSelectionssequenceSelectionAnswerTypeschema_OtherSelection_TFreeTextAnswerType_ struct {
	OtherSelections []*TFreeTextAnswerType `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd OtherSelection"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_OtherSelectionsequenceSelectionssequenceSelectionAnswerTypeschema_OtherSelection_TFreeTextAnswerType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_OtherSelectionsequenceSelectionssequenceSelectionAnswerTypeschema_OtherSelection_TFreeTextAnswerType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_OtherSelectionsequenceSelectionssequenceSelectionAnswerTypeschema_OtherSelection_TFreeTextAnswerType_ instance.
func (me *XsdGoPkgHasElems_OtherSelectionsequenceSelectionssequenceSelectionAnswerTypeschema_OtherSelection_TFreeTextAnswerType_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_OtherSelectionsequenceSelectionssequenceSelectionAnswerTypeschema_OtherSelection_TFreeTextAnswerType_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.OtherSelections {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_SelectionAnswerchoiceAnswerSpecificationTypeschema_SelectionAnswer_TSelectionAnswerType_ struct {
	SelectionAnswers []*TSelectionAnswerType `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd SelectionAnswer"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_SelectionAnswerchoiceAnswerSpecificationTypeschema_SelectionAnswer_TSelectionAnswerType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_SelectionAnswerchoiceAnswerSpecificationTypeschema_SelectionAnswer_TSelectionAnswerType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_SelectionAnswerchoiceAnswerSpecificationTypeschema_SelectionAnswer_TSelectionAnswerType_ instance.
func (me *XsdGoPkgHasElems_SelectionAnswerchoiceAnswerSpecificationTypeschema_SelectionAnswer_TSelectionAnswerType_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_SelectionAnswerchoiceAnswerSpecificationTypeschema_SelectionAnswer_TSelectionAnswerType_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.SelectionAnswers {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_TitlechoiceContentTypeschema_Title_XsdtString_ struct {
	Title xsdt.String `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd Title"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_TitlechoiceContentTypeschema_Title_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_TitlechoiceContentTypeschema_Title_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_TitlechoiceContentTypeschema_Title_XsdtString_ instance.
func (me *XsdGoPkgHasElem_TitlechoiceContentTypeschema_Title_XsdtString_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_TitlechoiceContentTypeschema_Title_XsdtString_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_JavaAppletchoiceApplicationContentTypeschema_JavaApplet_TJavaAppletContentType_ struct {
	JavaApplets []*TJavaAppletContentType `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd JavaApplet"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_JavaAppletchoiceApplicationContentTypeschema_JavaApplet_TJavaAppletContentType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_JavaAppletchoiceApplicationContentTypeschema_JavaApplet_TJavaAppletContentType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_JavaAppletchoiceApplicationContentTypeschema_JavaApplet_TJavaAppletContentType_ instance.
func (me *XsdGoPkgHasElems_JavaAppletchoiceApplicationContentTypeschema_JavaApplet_TJavaAppletContentType_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_JavaAppletchoiceApplicationContentTypeschema_JavaApplet_TJavaAppletContentType_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.JavaApplets {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_SelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_Selection_TxsdSelectionAnswerTypeSequenceSelectionsSequenceSelection_ struct {
	Selection *TxsdSelectionAnswerTypeSequenceSelectionsSequenceSelection `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd Selection"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_SelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_Selection_TxsdSelectionAnswerTypeSequenceSelectionsSequenceSelection_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_SelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_Selection_TxsdSelectionAnswerTypeSequenceSelectionsSequenceSelection_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_SelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_Selection_TxsdSelectionAnswerTypeSequenceSelectionsSequenceSelection_ instance.
func (me *XsdGoPkgHasElem_SelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_Selection_TxsdSelectionAnswerTypeSequenceSelectionsSequenceSelection_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_SelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_Selection_TxsdSelectionAnswerTypeSequenceSelectionsSequenceSelection_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.Selection.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_MimeTypesequenceBinaryContentTypeschema_MimeType_TMimeType_ struct {
	MimeTypes []*TMimeType `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd MimeType"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_MimeTypesequenceBinaryContentTypeschema_MimeType_TMimeType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_MimeTypesequenceBinaryContentTypeschema_MimeType_TMimeType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_MimeTypesequenceBinaryContentTypeschema_MimeType_TMimeType_ instance.
func (me *XsdGoPkgHasElems_MimeTypesequenceBinaryContentTypeschema_MimeType_TMimeType_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_MimeTypesequenceBinaryContentTypeschema_MimeType_TMimeType_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.MimeTypes {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_FileUploadAnswerchoiceAnswerSpecificationTypeschema_FileUploadAnswer_TFileUploadAnswerType_ struct {
	FileUploadAnswers []*TFileUploadAnswerType `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd FileUploadAnswer"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_FileUploadAnswerchoiceAnswerSpecificationTypeschema_FileUploadAnswer_TFileUploadAnswerType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_FileUploadAnswerchoiceAnswerSpecificationTypeschema_FileUploadAnswer_TFileUploadAnswerType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_FileUploadAnswerchoiceAnswerSpecificationTypeschema_FileUploadAnswer_TFileUploadAnswerType_ instance.
func (me *XsdGoPkgHasElems_FileUploadAnswerchoiceAnswerSpecificationTypeschema_FileUploadAnswer_TFileUploadAnswerType_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_FileUploadAnswerchoiceAnswerSpecificationTypeschema_FileUploadAnswer_TFileUploadAnswerType_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.FileUploadAnswers {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_MaxFileSizeInBytessequenceFileUploadAnswerTypeschema_MaxFileSizeInBytes_TMaxFileSizeType_ struct {
	MaxFileSizeInByteses []TMaxFileSizeType `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd MaxFileSizeInBytes"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_MaxFileSizeInBytessequenceFileUploadAnswerTypeschema_MaxFileSizeInBytes_TMaxFileSizeType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_MaxFileSizeInBytessequenceFileUploadAnswerTypeschema_MaxFileSizeInBytes_TMaxFileSizeType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_MaxFileSizeInBytessequenceFileUploadAnswerTypeschema_MaxFileSizeInBytes_TMaxFileSizeType_ instance.
func (me *XsdGoPkgHasElems_MaxFileSizeInBytessequenceFileUploadAnswerTypeschema_MaxFileSizeInBytes_TMaxFileSizeType_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_MaxFileSizeInBytessequenceFileUploadAnswerTypeschema_MaxFileSizeInBytes_TMaxFileSizeType_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_ValuesequenceApplicationParameterschema_Value_XsdtString_ struct {
	Values []xsdt.String `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd Value"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_ValuesequenceApplicationParameterschema_Value_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_ValuesequenceApplicationParameterschema_Value_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_ValuesequenceApplicationParameterschema_Value_XsdtString_ instance.
func (me *XsdGoPkgHasElems_ValuesequenceApplicationParameterschema_Value_XsdtString_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_ValuesequenceApplicationParameterschema_Value_XsdtString_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_MinSelectionCountsequenceSelectionAnswerTypeschema_MinSelectionCount_XsdtNonNegativeInteger_ struct {
	MinSelectionCounts []xsdt.NonNegativeInteger `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd MinSelectionCount"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_MinSelectionCountsequenceSelectionAnswerTypeschema_MinSelectionCount_XsdtNonNegativeInteger_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_MinSelectionCountsequenceSelectionAnswerTypeschema_MinSelectionCount_XsdtNonNegativeInteger_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_MinSelectionCountsequenceSelectionAnswerTypeschema_MinSelectionCount_XsdtNonNegativeInteger_ instance.
func (me *XsdGoPkgHasElems_MinSelectionCountsequenceSelectionAnswerTypeschema_MinSelectionCount_XsdtNonNegativeInteger_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_MinSelectionCountsequenceSelectionAnswerTypeschema_MinSelectionCount_XsdtNonNegativeInteger_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_SelectionssequenceSelectionAnswerTypeschema_Selections_TxsdSelectionAnswerTypeSequenceSelections_ struct {
	Selectionses []*TxsdSelectionAnswerTypeSequenceSelections `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd Selections"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_SelectionssequenceSelectionAnswerTypeschema_Selections_TxsdSelectionAnswerTypeSequenceSelections_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_SelectionssequenceSelectionAnswerTypeschema_Selections_TxsdSelectionAnswerTypeSequenceSelections_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_SelectionssequenceSelectionAnswerTypeschema_Selections_TxsdSelectionAnswerTypeSequenceSelections_ instance.
func (me *XsdGoPkgHasElems_SelectionssequenceSelectionAnswerTypeschema_Selections_TxsdSelectionAnswerTypeSequenceSelections_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_SelectionssequenceSelectionAnswerTypeschema_Selections_TxsdSelectionAnswerTypeSequenceSelections_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.Selectionses {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_QuestionchoicesequenceTxsdQuestionFormQuestionFormschema_Question_TxsdQuestionFormSequenceChoiceQuestion_ struct {
	Question *TxsdQuestionFormSequenceChoiceQuestion `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd Question"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_QuestionchoicesequenceTxsdQuestionFormQuestionFormschema_Question_TxsdQuestionFormSequenceChoiceQuestion_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_QuestionchoicesequenceTxsdQuestionFormQuestionFormschema_Question_TxsdQuestionFormSequenceChoiceQuestion_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_QuestionchoicesequenceTxsdQuestionFormQuestionFormschema_Question_TxsdQuestionFormSequenceChoiceQuestion_ instance.
func (me *XsdGoPkgHasElem_QuestionchoicesequenceTxsdQuestionFormQuestionFormschema_Question_TxsdQuestionFormSequenceChoiceQuestion_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_QuestionchoicesequenceTxsdQuestionFormQuestionFormschema_Question_TxsdQuestionFormSequenceChoiceQuestion_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.Question.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_MinFileSizeInBytessequenceFileUploadAnswerTypeschema_MinFileSizeInBytes_TMinFileSizeType_ struct {
	MinFileSizeInByteses []TMinFileSizeType `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd MinFileSizeInBytes"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_MinFileSizeInBytessequenceFileUploadAnswerTypeschema_MinFileSizeInBytes_TMinFileSizeType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_MinFileSizeInBytessequenceFileUploadAnswerTypeschema_MinFileSizeInBytes_TMinFileSizeType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_MinFileSizeInBytessequenceFileUploadAnswerTypeschema_MinFileSizeInBytes_TMinFileSizeType_ instance.
func (me *XsdGoPkgHasElems_MinFileSizeInBytessequenceFileUploadAnswerTypeschema_MinFileSizeInBytes_TMinFileSizeType_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_MinFileSizeInBytessequenceFileUploadAnswerTypeschema_MinFileSizeInBytes_TMinFileSizeType_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_AnswerFormatRegexsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_AnswerFormatRegex_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceAnswerFormatRegex_ struct {
	AnswerFormatRegex *TxsdFreeTextAnswerTypeSequenceConstraintsSequenceAnswerFormatRegex `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd AnswerFormatRegex"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_AnswerFormatRegexsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_AnswerFormatRegex_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceAnswerFormatRegex_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_AnswerFormatRegexsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_AnswerFormatRegex_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceAnswerFormatRegex_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_AnswerFormatRegexsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_AnswerFormatRegex_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceAnswerFormatRegex_ instance.
func (me *XsdGoPkgHasElem_AnswerFormatRegexsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_AnswerFormatRegex_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceAnswerFormatRegex_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_AnswerFormatRegexsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_AnswerFormatRegex_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceAnswerFormatRegex_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.AnswerFormatRegex.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_LengthsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_Length_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceLength_ struct {
	Lengths []*TxsdFreeTextAnswerTypeSequenceConstraintsSequenceLength `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd Length"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_LengthsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_Length_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceLength_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_LengthsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_Length_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceLength_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_LengthsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_Length_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceLength_ instance.
func (me *XsdGoPkgHasElems_LengthsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_Length_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceLength_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_LengthsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_Length_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceLength_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.Lengths {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_TypesequenceMimeTypeschema_Type_TxsdMimeTypeSequenceType_ struct {
	Types []TxsdMimeTypeSequenceType `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd Type"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_TypesequenceMimeTypeschema_Type_TxsdMimeTypeSequenceType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_TypesequenceMimeTypeschema_Type_TxsdMimeTypeSequenceType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_TypesequenceMimeTypeschema_Type_TxsdMimeTypeSequenceType_ instance.
func (me *XsdGoPkgHasElems_TypesequenceMimeTypeschema_Type_TxsdMimeTypeSequenceType_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_TypesequenceMimeTypeschema_Type_TxsdMimeTypeSequenceType_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_TypesequenceEmbeddedMimeTypeschema_Type_XsdtString_ struct {
	Types []xsdt.String `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd Type"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_TypesequenceEmbeddedMimeTypeschema_Type_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_TypesequenceEmbeddedMimeTypeschema_Type_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_TypesequenceEmbeddedMimeTypeschema_Type_XsdtString_ instance.
func (me *XsdGoPkgHasElems_TypesequenceEmbeddedMimeTypeschema_Type_XsdtString_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_TypesequenceEmbeddedMimeTypeschema_Type_XsdtString_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_EmbeddedBinarychoiceContentTypeschema_EmbeddedBinary_TEmbeddedBinaryContentType_ struct {
	EmbeddedBinary *TEmbeddedBinaryContentType `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd EmbeddedBinary"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_EmbeddedBinarychoiceContentTypeschema_EmbeddedBinary_TEmbeddedBinaryContentType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_EmbeddedBinarychoiceContentTypeschema_EmbeddedBinary_TEmbeddedBinaryContentType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_EmbeddedBinarychoiceContentTypeschema_EmbeddedBinary_TEmbeddedBinaryContentType_ instance.
func (me *XsdGoPkgHasElem_EmbeddedBinarychoiceContentTypeschema_EmbeddedBinary_TEmbeddedBinaryContentType_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_EmbeddedBinarychoiceContentTypeschema_EmbeddedBinary_TEmbeddedBinaryContentType_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.EmbeddedBinary.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasCdata struct {
	XsdGoPkgCDATA string `xml:",chardata"`
}

//	If the WalkHandlers.XsdGoPkgHasCdata function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasCdata instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasCdata instance.
func (me *XsdGoPkgHasCdata) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasCdata; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_AppletPathsequenceJavaAppletContentTypeschema_AppletPath_TURLType_ struct {
	AppletPaths []TURLType `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd AppletPath"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_AppletPathsequenceJavaAppletContentTypeschema_AppletPath_TURLType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_AppletPathsequenceJavaAppletContentTypeschema_AppletPath_TURLType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_AppletPathsequenceJavaAppletContentTypeschema_AppletPath_TURLType_ instance.
func (me *XsdGoPkgHasElems_AppletPathsequenceJavaAppletContentTypeschema_AppletPath_TURLType_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_AppletPathsequenceJavaAppletContentTypeschema_AppletPath_TURLType_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_MaxSelectionCountsequenceSelectionAnswerTypeschema_MaxSelectionCount_XsdtPositiveInteger_ struct {
	MaxSelectionCounts []xsdt.PositiveInteger `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd MaxSelectionCount"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_MaxSelectionCountsequenceSelectionAnswerTypeschema_MaxSelectionCount_XsdtPositiveInteger_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_MaxSelectionCountsequenceSelectionAnswerTypeschema_MaxSelectionCount_XsdtPositiveInteger_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_MaxSelectionCountsequenceSelectionAnswerTypeschema_MaxSelectionCount_XsdtPositiveInteger_ instance.
func (me *XsdGoPkgHasElems_MaxSelectionCountsequenceSelectionAnswerTypeschema_MaxSelectionCount_XsdtPositiveInteger_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_MaxSelectionCountsequenceSelectionAnswerTypeschema_MaxSelectionCount_XsdtPositiveInteger_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_OverviewchoicesequenceQuestionFormschema_Overview_TContentType_ struct {
	Overview *TContentType `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd Overview"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_OverviewchoicesequenceQuestionFormschema_Overview_TContentType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_OverviewchoicesequenceQuestionFormschema_Overview_TContentType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_OverviewchoicesequenceQuestionFormschema_Overview_TContentType_ instance.
func (me *XsdGoPkgHasElem_OverviewchoicesequenceQuestionFormschema_Overview_TContentType_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_OverviewchoicesequenceQuestionFormschema_Overview_TContentType_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.Overview.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_AnswerSpecificationsequenceQuestionchoicesequenceQuestionFormschema_AnswerSpecification_TAnswerSpecificationType_ struct {
	AnswerSpecifications []*TAnswerSpecificationType `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd AnswerSpecification"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_AnswerSpecificationsequenceQuestionchoicesequenceQuestionFormschema_AnswerSpecification_TAnswerSpecificationType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_AnswerSpecificationsequenceQuestionchoicesequenceQuestionFormschema_AnswerSpecification_TAnswerSpecificationType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_AnswerSpecificationsequenceQuestionchoicesequenceQuestionFormschema_AnswerSpecification_TAnswerSpecificationType_ instance.
func (me *XsdGoPkgHasElems_AnswerSpecificationsequenceQuestionchoicesequenceQuestionFormschema_AnswerSpecification_TAnswerSpecificationType_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_AnswerSpecificationsequenceQuestionchoicesequenceQuestionFormschema_AnswerSpecification_TAnswerSpecificationType_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.AnswerSpecifications {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_FreeTextAnswerchoiceAnswerSpecificationTypeschema_FreeTextAnswer_TFreeTextAnswerType_ struct {
	FreeTextAnswers []*TFreeTextAnswerType `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd FreeTextAnswer"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_FreeTextAnswerchoiceAnswerSpecificationTypeschema_FreeTextAnswer_TFreeTextAnswerType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_FreeTextAnswerchoiceAnswerSpecificationTypeschema_FreeTextAnswer_TFreeTextAnswerType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_FreeTextAnswerchoiceAnswerSpecificationTypeschema_FreeTextAnswer_TFreeTextAnswerType_ instance.
func (me *XsdGoPkgHasElems_FreeTextAnswerchoiceAnswerSpecificationTypeschema_FreeTextAnswer_TFreeTextAnswerType_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_FreeTextAnswerchoiceAnswerSpecificationTypeschema_FreeTextAnswer_TFreeTextAnswerType_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.FreeTextAnswers {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_FlashMovieURLsequenceFlashContentTypeschema_FlashMovieURL_TURLType_ struct {
	FlashMovieURLs []TURLType `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd FlashMovieURL"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_FlashMovieURLsequenceFlashContentTypeschema_FlashMovieURL_TURLType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_FlashMovieURLsequenceFlashContentTypeschema_FlashMovieURL_TURLType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_FlashMovieURLsequenceFlashContentTypeschema_FlashMovieURL_TURLType_ instance.
func (me *XsdGoPkgHasElems_FlashMovieURLsequenceFlashContentTypeschema_FlashMovieURL_TURLType_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_FlashMovieURLsequenceFlashContentTypeschema_FlashMovieURL_TURLType_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

var (
	//	Set this to false to break a Walk() immediately as soon as the first error is returned by a custom handler function.
	//	If true, Walk() proceeds and accumulates all errors in the WalkErrors slice.
	WalkContinueOnError = true
	//	Contains all errors accumulated during Walk()s. If you're using this, you need to reset this yourself as needed prior to a fresh Walk().
	WalkErrors []error
	//	Your custom error-handling function, if required.
	WalkOnError func(error)
	//	Provides 125 strong-typed hooks for your own custom handler functions to be invoked when the Walk() method is called on any instance of any (non-attribute-related) struct type defined in this package.
	//	If your custom handler does get called at all for a given struct instance, then it always gets called twice, first with the 'enter' bool argument set to true, then (after having Walk()ed all subordinate struct instances, if any) once again with it set to false.
	WalkHandlers = &XsdGoPkgWalkHandlers{}
)

//	Provides 125 strong-typed hooks for your own custom handler functions to be invoked when the Walk() method is called on any instance of any (non-attribute-related) struct type defined in this package.
//	If your custom handler does get called at all for a given struct instance, then it always gets called twice, first with the 'enter' bool argument set to true, then (after having Walk()ed all subordinate struct instances, if any) once again with it set to false.
type XsdGoPkgWalkHandlers struct {
	XsdGoPkgHasElems_ApplicationParametersequenceJavaAppletContentTypeschema_ApplicationParameter_TApplicationParameter_                                                                                                                       func(*XsdGoPkgHasElems_ApplicationParametersequenceJavaAppletContentTypeschema_ApplicationParameter_TApplicationParameter_, bool) error
	XsdGoPkgHasElem_ApplicationchoiceContentTypeschema_Application_TApplicationContentType_                                                                                                                                                    func(*XsdGoPkgHasElem_ApplicationchoiceContentTypeschema_Application_TApplicationContentType_, bool) error
	XsdGoPkgHasElem_FormattedContentchoicesequenceTxsdSelectionAnswerTypeSequenceSelectionsSequenceSelectionSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_FormattedContent_XsdtString_ func(*XsdGoPkgHasElem_FormattedContentchoicesequenceTxsdSelectionAnswerTypeSequenceSelectionsSequenceSelectionSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_FormattedContent_XsdtString_, bool) error
	XsdGoPkgHasElems_MimeTypesequenceBinaryContentTypeschema_MimeType_TMimeType_                                                                                                                                                               func(*XsdGoPkgHasElems_MimeTypesequenceBinaryContentTypeschema_MimeType_TMimeType_, bool) error
	TBinaryContentType                                                                                                                                                                                                                         func(*TBinaryContentType, bool) error
	XsdGoPkgHasElem_FileUploadAnswerchoiceAnswerSpecificationTypeschema_FileUploadAnswer_TFileUploadAnswerType_                                                                                                                                func(*XsdGoPkgHasElem_FileUploadAnswerchoiceAnswerSpecificationTypeschema_FileUploadAnswer_TFileUploadAnswerType_, bool) error
	TxsdQuestionFormSequenceChoiceQuestion                                                                                                                                                                                                     func(*TxsdQuestionFormSequenceChoiceQuestion, bool) error
	XsdGoPkgHasElems_MinFileSizeInBytessequenceFileUploadAnswerTypeschema_MinFileSizeInBytes_TMinFileSizeType_                                                                                                                                 func(*XsdGoPkgHasElems_MinFileSizeInBytessequenceFileUploadAnswerTypeschema_MinFileSizeInBytes_TMinFileSizeType_, bool) error
	XsdGoPkgHasElems_FlashMovieURLsequenceFlashContentTypeschema_FlashMovieURL_TURLType_                                                                                                                                                       func(*XsdGoPkgHasElems_FlashMovieURLsequenceFlashContentTypeschema_FlashMovieURL_TURLType_, bool) error
	XsdGoPkgHasElems_BinarychoiceContentTypeschema_Binary_TBinaryContentType_                                                                                                                                                                  func(*XsdGoPkgHasElems_BinarychoiceContentTypeschema_Binary_TBinaryContentType_, bool) error
	TFlashContentType                                                                                                                                                                                                                          func(*TFlashContentType, bool) error
	XsdGoPkgHasElem_TextchoicesequenceTxsdSelectionAnswerTypeSequenceSelectionsSequenceSelectionSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_Text_XsdtString_                         func(*XsdGoPkgHasElem_TextchoicesequenceTxsdSelectionAnswerTypeSequenceSelectionsSequenceSelectionSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_Text_XsdtString_, bool) error
	XsdGoPkgHasElem_AnswerSpecificationsequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_AnswerSpecification_TAnswerSpecificationType_                                                    func(*XsdGoPkgHasElem_AnswerSpecificationsequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_AnswerSpecification_TAnswerSpecificationType_, bool) error
	XsdGoPkgHasElems_SelectionAnswerchoiceAnswerSpecificationTypeschema_SelectionAnswer_TSelectionAnswerType_                                                                                                                                  func(*XsdGoPkgHasElems_SelectionAnswerchoiceAnswerSpecificationTypeschema_SelectionAnswer_TSelectionAnswerType_, bool) error
	XsdGoPkgHasElem_QuestionIdentifiersequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_QuestionIdentifier_XsdtString_                                                                    func(*XsdGoPkgHasElem_QuestionIdentifiersequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_QuestionIdentifier_XsdtString_, bool) error
	TxsdFreeTextAnswerTypeSequenceConstraintsSequenceLength                                                                                                                                                                                    func(*TxsdFreeTextAnswerTypeSequenceConstraintsSequenceLength, bool) error
	XsdGoPkgHasElem_QuestionchoicesequenceTxsdQuestionFormQuestionFormschema_Question_TxsdQuestionFormSequenceChoiceQuestion_                                                                                                                  func(*XsdGoPkgHasElem_QuestionchoicesequenceTxsdQuestionFormQuestionFormschema_Question_TxsdQuestionFormSequenceChoiceQuestion_, bool) error
	XsdGoPkgHasElems_HeightsequenceEmbeddedBinaryContentTypeschema_Height_XsdtString_                                                                                                                                                          func(*XsdGoPkgHasElems_HeightsequenceEmbeddedBinaryContentTypeschema_Height_XsdtString_, bool) error
	XsdGoPkgHasElems_SelectionIdentifiersequenceSelectionsequenceSelectionssequenceSelectionAnswerTypeschema_SelectionIdentifier_XsdtString_                                                                                                   func(*XsdGoPkgHasElems_SelectionIdentifiersequenceSelectionsequenceSelectionssequenceSelectionAnswerTypeschema_SelectionIdentifier_XsdtString_, bool) error
	XsdGoPkgHasElems_SubTypesequenceEmbeddedMimeTypeschema_SubType_XsdtString_                                                                                                                                                                 func(*XsdGoPkgHasElems_SubTypesequenceEmbeddedMimeTypeschema_SubType_XsdtString_, bool) error
	XsdGoPkgHasElem_ValuesequenceApplicationParameterschema_Value_XsdtString_                                                                                                                                                                  func(*XsdGoPkgHasElem_ValuesequenceApplicationParameterschema_Value_XsdtString_, bool) error
	XsdGoPkgHasElem_TypesequenceEmbeddedMimeTypeschema_Type_XsdtString_                                                                                                                                                                        func(*XsdGoPkgHasElem_TypesequenceEmbeddedMimeTypeschema_Type_XsdtString_, bool) error
	XsdGoPkgHasElems_FreeTextAnswerchoiceAnswerSpecificationTypeschema_FreeTextAnswer_TFreeTextAnswerType_                                                                                                                                     func(*XsdGoPkgHasElems_FreeTextAnswerchoiceAnswerSpecificationTypeschema_FreeTextAnswer_TFreeTextAnswerType_, bool) error
	XsdGoPkgHasElem_MinSelectionCountsequenceSelectionAnswerTypeschema_MinSelectionCount_XsdtNonNegativeInteger_                                                                                                                               func(*XsdGoPkgHasElem_MinSelectionCountsequenceSelectionAnswerTypeschema_MinSelectionCount_XsdtNonNegativeInteger_, bool) error
	XsdGoPkgHasElems_QuestionIdentifiersequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_QuestionIdentifier_XsdtString_                                                                   func(*XsdGoPkgHasElems_QuestionIdentifiersequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_QuestionIdentifier_XsdtString_, bool) error
	XsdGoPkgHasElems_StyleSuggestionsequenceSelectionAnswerTypeschema_StyleSuggestion_TxsdSelectionAnswerTypeSequenceStyleSuggestion_                                                                                                          func(*XsdGoPkgHasElems_StyleSuggestionsequenceSelectionAnswerTypeschema_StyleSuggestion_TxsdSelectionAnswerTypeSequenceStyleSuggestion_, bool) error
	XsdGoPkgHasElems_TitlechoiceContentTypeschema_Title_XsdtString_                                                                                                                                                                            func(*XsdGoPkgHasElems_TitlechoiceContentTypeschema_Title_XsdtString_, bool) error
	XsdGoPkgHasElem_StyleSuggestionsequenceSelectionAnswerTypeschema_StyleSuggestion_TxsdSelectionAnswerTypeSequenceStyleSuggestion_                                                                                                           func(*XsdGoPkgHasElem_StyleSuggestionsequenceSelectionAnswerTypeschema_StyleSuggestion_TxsdSelectionAnswerTypeSequenceStyleSuggestion_, bool) error
	XsdGoPkgHasElem_ListchoiceContentTypeschema_List_TxsdContentTypeChoiceList_                                                                                                                                                                func(*XsdGoPkgHasElem_ListchoiceContentTypeschema_List_TxsdContentTypeChoiceList_, bool) error
	XsdGoPkgHasElems_ListItemsequenceTxsdContentTypeChoiceListListchoiceContentTypeschema_ListItem_XsdtString_                                                                                                                                 func(*XsdGoPkgHasElems_ListItemsequenceTxsdContentTypeChoiceListListchoiceContentTypeschema_ListItem_XsdtString_, bool) error
	XsdGoPkgHasElems_IsRequiredsequenceQuestionchoicesequenceQuestionFormschema_IsRequired_XsdtBoolean_                                                                                                                                        func(*XsdGoPkgHasElems_IsRequiredsequenceQuestionchoicesequenceQuestionFormschema_IsRequired_XsdtBoolean_, bool) error
	XsdGoPkgHasElem_EmbeddedBinarychoiceContentTypeschema_EmbeddedBinary_TEmbeddedBinaryContentType_                                                                                                                                           func(*XsdGoPkgHasElem_EmbeddedBinarychoiceContentTypeschema_EmbeddedBinary_TEmbeddedBinaryContentType_, bool) error
	TMimeType                                                                                                                                                                                                                                  func(*TMimeType, bool) error
	TFreeTextAnswerType                                                                                                                                                                                                                        func(*TFreeTextAnswerType, bool) error
	XsdGoPkgHasElems_MaxFileSizeInBytessequenceFileUploadAnswerTypeschema_MaxFileSizeInBytes_TMaxFileSizeType_                                                                                                                                 func(*XsdGoPkgHasElems_MaxFileSizeInBytessequenceFileUploadAnswerTypeschema_MaxFileSizeInBytes_TMaxFileSizeType_, bool) error
	XsdGoPkgHasElems_MinSelectionCountsequenceSelectionAnswerTypeschema_MinSelectionCount_XsdtNonNegativeInteger_                                                                                                                              func(*XsdGoPkgHasElems_MinSelectionCountsequenceSelectionAnswerTypeschema_MinSelectionCount_XsdtNonNegativeInteger_, bool) error
	XsdGoPkgHasElem_DataURLsequenceBinaryContentTypeschema_DataURL_TURLType_                                                                                                                                                                   func(*XsdGoPkgHasElem_DataURLsequenceBinaryContentTypeschema_DataURL_TURLType_, bool) error
	XsdGoPkgHasElems_TextchoiceContentTypeschema_Text_XsdtString_                                                                                                                                                                              func(*XsdGoPkgHasElems_TextchoiceContentTypeschema_Text_XsdtString_, bool) error
	XsdGoPkgHasElems_MaxSelectionCountsequenceSelectionAnswerTypeschema_MaxSelectionCount_XsdtPositiveInteger_                                                                                                                                 func(*XsdGoPkgHasElems_MaxSelectionCountsequenceSelectionAnswerTypeschema_MaxSelectionCount_XsdtPositiveInteger_, bool) error
	TEmbeddedMimeType                                                                                                                                                                                                                          func(*TEmbeddedMimeType, bool) error
	XsdGoPkgHasElem_IsRequiredsequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_IsRequired_XsdtBoolean_                                                                                   func(*XsdGoPkgHasElem_IsRequiredsequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_IsRequired_XsdtBoolean_, bool) error
	XsdGoPkgHasElem_QuestionContentsequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_QuestionContent_TContentType_                                                                        func(*XsdGoPkgHasElem_QuestionContentsequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_QuestionContent_TContentType_, bool) error
	TSelectionAnswerType                                                                                                                                                                                                                       func(*TSelectionAnswerType, bool) error
	XsdGoPkgHasElems_JavaAppletchoiceApplicationContentTypeschema_JavaApplet_TJavaAppletContentType_                                                                                                                                           func(*XsdGoPkgHasElems_JavaAppletchoiceApplicationContentTypeschema_JavaApplet_TJavaAppletContentType_, bool) error
	XsdGoPkgHasElem_AppletFilenamesequenceJavaAppletContentTypeschema_AppletFilename_XsdtString_                                                                                                                                               func(*XsdGoPkgHasElem_AppletFilenamesequenceJavaAppletContentTypeschema_AppletFilename_XsdtString_, bool) error
	XsdGoPkgHasElems_ListchoiceContentTypeschema_List_TxsdContentTypeChoiceList_                                                                                                                                                               func(*XsdGoPkgHasElems_ListchoiceContentTypeschema_List_TxsdContentTypeChoiceList_, bool) error
	XsdGoPkgHasElems_ConstraintssequenceFreeTextAnswerTypeschema_Constraints_TxsdFreeTextAnswerTypeSequenceConstraints_                                                                                                                        func(*XsdGoPkgHasElems_ConstraintssequenceFreeTextAnswerTypeschema_Constraints_TxsdFreeTextAnswerTypeSequenceConstraints_, bool) error
	XsdGoPkgHasElems_OverviewchoicesequenceTxsdQuestionFormQuestionFormschema_Overview_TContentType_                                                                                                                                           func(*XsdGoPkgHasElems_OverviewchoicesequenceTxsdQuestionFormQuestionFormschema_Overview_TContentType_, bool) error
	XsdGoPkgHasElem_SelectionIdentifiersequenceTxsdSelectionAnswerTypeSequenceSelectionsSequenceSelectionSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_SelectionIdentifier_XsdtString_ func(*XsdGoPkgHasElem_SelectionIdentifiersequenceTxsdSelectionAnswerTypeSequenceSelectionsSequenceSelectionSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_SelectionIdentifier_XsdtString_, bool) error
	XsdGoPkgHasElems_SelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_Selection_TxsdSelectionAnswerTypeSequenceSelectionsSequenceSelection_                                               func(*XsdGoPkgHasElems_SelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_Selection_TxsdSelectionAnswerTypeSequenceSelectionsSequenceSelection_, bool) error
	XsdGoPkgHasElems_FormattedContentchoiceContentTypeschema_FormattedContent_XsdtString_                                                                                                                                                      func(*XsdGoPkgHasElems_FormattedContentchoiceContentTypeschema_FormattedContent_XsdtString_, bool) error
	XsdGoPkgHasElem_AltTextsequenceBinaryContentTypeschema_AltText_XsdtString_                                                                                                                                                                 func(*XsdGoPkgHasElem_AltTextsequenceBinaryContentTypeschema_AltText_XsdtString_, bool) error
	XsdGoPkgHasElem_MimeTypesequenceBinaryContentTypeschema_MimeType_TMimeType_                                                                                                                                                                func(*XsdGoPkgHasElem_MimeTypesequenceBinaryContentTypeschema_MimeType_TMimeType_, bool) error
	XsdGoPkgHasElem_JavaAppletchoiceApplicationContentTypeschema_JavaApplet_TJavaAppletContentType_                                                                                                                                            func(*XsdGoPkgHasElem_JavaAppletchoiceApplicationContentTypeschema_JavaApplet_TJavaAppletContentType_, bool) error
	XsdGoPkgHasElems_ApplicationchoiceContentTypeschema_Application_TApplicationContentType_                                                                                                                                                   func(*XsdGoPkgHasElems_ApplicationchoiceContentTypeschema_Application_TApplicationContentType_, bool) error
	XsdGoPkgHasElems_FlashchoiceApplicationContentTypeschema_Flash_TFlashContentType_                                                                                                                                                          func(*XsdGoPkgHasElems_FlashchoiceApplicationContentTypeschema_Flash_TFlashContentType_, bool) error
	XsdGoPkgHasElems_AnswerSpecificationsequenceQuestionchoicesequenceQuestionFormschema_AnswerSpecification_TAnswerSpecificationType_                                                                                                         func(*XsdGoPkgHasElems_AnswerSpecificationsequenceQuestionchoicesequenceQuestionFormschema_AnswerSpecification_TAnswerSpecificationType_, bool) error
	XsdGoPkgHasElem_WidthsequenceJavaAppletContentTypeschema_Width_XsdtString_                                                                                                                                                                 func(*XsdGoPkgHasElem_WidthsequenceJavaAppletContentTypeschema_Width_XsdtString_, bool) error
	XsdGoPkgHasElem_NumberOfLinesSuggestionsequenceFreeTextAnswerTypeschema_NumberOfLinesSuggestion_XsdtPositiveInteger_                                                                                                                       func(*XsdGoPkgHasElem_NumberOfLinesSuggestionsequenceFreeTextAnswerTypeschema_NumberOfLinesSuggestion_XsdtPositiveInteger_, bool) error
	XsdGoPkgHasElems_WidthsequenceJavaAppletContentTypeschema_Width_XsdtString_                                                                                                                                                                func(*XsdGoPkgHasElems_WidthsequenceJavaAppletContentTypeschema_Width_XsdtString_, bool) error
	XsdGoPkgHasElem_SelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_Selection_TxsdSelectionAnswerTypeSequenceSelectionsSequenceSelection_                                                func(*XsdGoPkgHasElem_SelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_Selection_TxsdSelectionAnswerTypeSequenceSelectionsSequenceSelection_, bool) error
	TEmbeddedBinaryContentType                                                                                                                                                                                                                 func(*TEmbeddedBinaryContentType, bool) error
	XsdGoPkgHasElems_EmbeddedBinarychoiceContentTypeschema_EmbeddedBinary_TEmbeddedBinaryContentType_                                                                                                                                          func(*XsdGoPkgHasElems_EmbeddedBinarychoiceContentTypeschema_EmbeddedBinary_TEmbeddedBinaryContentType_, bool) error
	XsdGoPkgHasElems_TypesequenceEmbeddedMimeTypeschema_Type_XsdtString_                                                                                                                                                                       func(*XsdGoPkgHasElems_TypesequenceEmbeddedMimeTypeschema_Type_XsdtString_, bool) error
	XsdGoPkgHasElems_NamesequenceApplicationParameterschema_Name_XsdtString_                                                                                                                                                                   func(*XsdGoPkgHasElems_NamesequenceApplicationParameterschema_Name_XsdtString_, bool) error
	XsdGoPkgHasElems_SelectionssequenceSelectionAnswerTypeschema_Selections_TxsdSelectionAnswerTypeSequenceSelections_                                                                                                                         func(*XsdGoPkgHasElems_SelectionssequenceSelectionAnswerTypeschema_Selections_TxsdSelectionAnswerTypeSequenceSelections_, bool) error
	TxsdFreeTextAnswerTypeSequenceConstraintsSequenceAnswerFormatRegex                                                                                                                                                                         func(*TxsdFreeTextAnswerTypeSequenceConstraintsSequenceAnswerFormatRegex, bool) error
	TxsdFreeTextAnswerTypeSequenceConstraints                                                                                                                                                                                                  func(*TxsdFreeTextAnswerTypeSequenceConstraints, bool) error
	XsdGoPkgHasElem_ConstraintssequenceFreeTextAnswerTypeschema_Constraints_TxsdFreeTextAnswerTypeSequenceConstraints_                                                                                                                         func(*XsdGoPkgHasElem_ConstraintssequenceFreeTextAnswerTypeschema_Constraints_TxsdFreeTextAnswerTypeSequenceConstraints_, bool) error
	TxsdSelectionAnswerTypeSequenceSelections                                                                                                                                                                                                  func(*TxsdSelectionAnswerTypeSequenceSelections, bool) error
	XsdGoPkgHasElem_SelectionssequenceSelectionAnswerTypeschema_Selections_TxsdSelectionAnswerTypeSequenceSelections_                                                                                                                          func(*XsdGoPkgHasElem_SelectionssequenceSelectionAnswerTypeschema_Selections_TxsdSelectionAnswerTypeSequenceSelections_, bool) error
	XsdGoPkgHasElem_DisplayNamesequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_DisplayName_XsdtString_                                                                                  func(*XsdGoPkgHasElem_DisplayNamesequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_DisplayName_XsdtString_, bool) error
	XsdGoPkgHasElem_BinarychoicesequenceTxsdSelectionAnswerTypeSequenceSelectionsSequenceSelectionSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_Binary_TBinaryContentType_             func(*XsdGoPkgHasElem_BinarychoicesequenceTxsdSelectionAnswerTypeSequenceSelectionsSequenceSelectionSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_Binary_TBinaryContentType_, bool) error
	XsdGoPkgHasElems_DataURLsequenceBinaryContentTypeschema_DataURL_TURLType_                                                                                                                                                                  func(*XsdGoPkgHasElems_DataURLsequenceBinaryContentTypeschema_DataURL_TURLType_, bool) error
	XsdGoPkgHasElem_MinFileSizeInBytessequenceFileUploadAnswerTypeschema_MinFileSizeInBytes_TMinFileSizeType_                                                                                                                                  func(*XsdGoPkgHasElem_MinFileSizeInBytessequenceFileUploadAnswerTypeschema_MinFileSizeInBytes_TMinFileSizeType_, bool) error
	XsdGoPkgHasElems_QuestionContentsequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_QuestionContent_TContentType_                                                                       func(*XsdGoPkgHasElems_QuestionContentsequenceTxsdQuestionFormSequenceChoiceQuestionQuestionchoicesequenceTxsdQuestionFormQuestionFormschema_QuestionContent_TContentType_, bool) error
	XsdGoPkgHasElems_TypesequenceMimeTypeschema_Type_TxsdMimeTypeSequenceType_                                                                                                                                                                 func(*XsdGoPkgHasElems_TypesequenceMimeTypeschema_Type_TxsdMimeTypeSequenceType_, bool) error
	TContentType                                                                                                                                                                                                                               func(*TContentType, bool) error
	XsdGoPkgHasElems_AltTextsequenceBinaryContentTypeschema_AltText_XsdtString_                                                                                                                                                                func(*XsdGoPkgHasElems_AltTextsequenceBinaryContentTypeschema_AltText_XsdtString_, bool) error
	XsdGoPkgHasElems_DisplayNamesequenceQuestionchoicesequenceQuestionFormschema_DisplayName_XsdtString_                                                                                                                                       func(*XsdGoPkgHasElems_DisplayNamesequenceQuestionchoicesequenceQuestionFormschema_DisplayName_XsdtString_, bool) error
	XsdGoPkgHasElems_AppletFilenamesequenceJavaAppletContentTypeschema_AppletFilename_XsdtString_                                                                                                                                              func(*XsdGoPkgHasElems_AppletFilenamesequenceJavaAppletContentTypeschema_AppletFilename_XsdtString_, bool) error
	XsdGoPkgHasElem_TitlechoiceContentTypeschema_Title_XsdtString_                                                                                                                                                                             func(*XsdGoPkgHasElem_TitlechoiceContentTypeschema_Title_XsdtString_, bool) error
	XsdGoPkgHasElem_EmbeddedMimeTypesequenceEmbeddedBinaryContentTypeschema_EmbeddedMimeType_TEmbeddedMimeType_                                                                                                                                func(*XsdGoPkgHasElem_EmbeddedMimeTypesequenceEmbeddedBinaryContentTypeschema_EmbeddedMimeType_TEmbeddedMimeType_, bool) error
	XsdGoPkgHasElem_AnswerFormatRegexsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_AnswerFormatRegex_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceAnswerFormatRegex_                        func(*XsdGoPkgHasElem_AnswerFormatRegexsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_AnswerFormatRegex_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceAnswerFormatRegex_, bool) error
	XsdGoPkgHasElem_HeightsequenceJavaAppletContentTypeschema_Height_XsdtString_                                                                                                                                                               func(*XsdGoPkgHasElem_HeightsequenceJavaAppletContentTypeschema_Height_XsdtString_, bool) error
	XsdGoPkgHasElem_DefaultTextsequenceFreeTextAnswerTypeschema_DefaultText_XsdtString_                                                                                                                                                        func(*XsdGoPkgHasElem_DefaultTextsequenceFreeTextAnswerTypeschema_DefaultText_XsdtString_, bool) error
	TxsdSelectionAnswerTypeSequenceSelectionsSequenceSelection                                                                                                                                                                                 func(*TxsdSelectionAnswerTypeSequenceSelectionsSequenceSelection, bool) error
	XsdGoPkgHasElems_IsNumericsequenceConstraintssequenceFreeTextAnswerTypeschema_IsNumeric_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceIsNumeric_                                                                                        func(*XsdGoPkgHasElems_IsNumericsequenceConstraintssequenceFreeTextAnswerTypeschema_IsNumeric_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceIsNumeric_, bool) error
	XsdGoPkgHasElems_ValuesequenceApplicationParameterschema_Value_XsdtString_                                                                                                                                                                 func(*XsdGoPkgHasElems_ValuesequenceApplicationParameterschema_Value_XsdtString_, bool) error
	XsdGoPkgHasElems_LengthsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_Length_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceLength_                                                        func(*XsdGoPkgHasElems_LengthsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_Length_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceLength_, bool) error
	TAnswerSpecificationType                                                                                                                                                                                                                   func(*TAnswerSpecificationType, bool) error
	XsdGoPkgHasElem_ApplicationParametersequenceEmbeddedBinaryContentTypeschema_ApplicationParameter_TApplicationParameter_                                                                                                                    func(*XsdGoPkgHasElem_ApplicationParametersequenceEmbeddedBinaryContentTypeschema_ApplicationParameter_TApplicationParameter_, bool) error
	XsdGoPkgHasElem_ListItemsequenceListchoiceContentTypeschema_ListItem_XsdtString_                                                                                                                                                           func(*XsdGoPkgHasElem_ListItemsequenceListchoiceContentTypeschema_ListItem_XsdtString_, bool) error
	XsdGoPkgHasElem_NamesequenceApplicationParameterschema_Name_XsdtString_                                                                                                                                                                    func(*XsdGoPkgHasElem_NamesequenceApplicationParameterschema_Name_XsdtString_, bool) error
	XsdGoPkgHasElem_FlashchoiceApplicationContentTypeschema_Flash_TFlashContentType_                                                                                                                                                           func(*XsdGoPkgHasElem_FlashchoiceApplicationContentTypeschema_Flash_TFlashContentType_, bool) error
	TApplicationContentType                                                                                                                                                                                                                    func(*TApplicationContentType, bool) error
	TxsdContentTypeChoiceList                                                                                                                                                                                                                  func(*TxsdContentTypeChoiceList, bool) error
	TFileUploadAnswerType                                                                                                                                                                                                                      func(*TFileUploadAnswerType, bool) error
	XsdGoPkgHasElems_EmbeddedMimeTypesequenceEmbeddedBinaryContentTypeschema_EmbeddedMimeType_TEmbeddedMimeType_                                                                                                                               func(*XsdGoPkgHasElems_EmbeddedMimeTypesequenceEmbeddedBinaryContentTypeschema_EmbeddedMimeType_TEmbeddedMimeType_, bool) error
	TJavaAppletContentType                                                                                                                                                                                                                     func(*TJavaAppletContentType, bool) error
	XsdGoPkgHasElem_TypesequenceMimeTypeschema_Type_TxsdMimeTypeSequenceType_                                                                                                                                                                  func(*XsdGoPkgHasElem_TypesequenceMimeTypeschema_Type_TxsdMimeTypeSequenceType_, bool) error
	XsdGoPkgHasElem_FlashMovieURLsequenceFlashContentTypeschema_FlashMovieURL_TURLType_                                                                                                                                                        func(*XsdGoPkgHasElem_FlashMovieURLsequenceFlashContentTypeschema_FlashMovieURL_TURLType_, bool) error
	TxsdQuestionForm                                                                                                                                                                                                                           func(*TxsdQuestionForm, bool) error
	XsdGoPkgHasElem_QuestionForm                                                                                                                                                                                                               func(*XsdGoPkgHasElem_QuestionForm, bool) error
	TApplicationParameter                                                                                                                                                                                                                      func(*TApplicationParameter, bool) error
	XsdGoPkgHasElem_LengthsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_Length_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceLength_                                                         func(*XsdGoPkgHasElem_LengthsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_Length_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceLength_, bool) error
	XsdGoPkgHasElems_AnswerFormatRegexsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_AnswerFormatRegex_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceAnswerFormatRegex_                       func(*XsdGoPkgHasElems_AnswerFormatRegexsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_AnswerFormatRegex_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceAnswerFormatRegex_, bool) error
	XsdGoPkgHasElem_MaxSelectionCountsequenceSelectionAnswerTypeschema_MaxSelectionCount_XsdtPositiveInteger_                                                                                                                                  func(*XsdGoPkgHasElem_MaxSelectionCountsequenceSelectionAnswerTypeschema_MaxSelectionCount_XsdtPositiveInteger_, bool) error
	XsdGoPkgHasElem_MaxFileSizeInBytessequenceFileUploadAnswerTypeschema_MaxFileSizeInBytes_TMaxFileSizeType_                                                                                                                                  func(*XsdGoPkgHasElem_MaxFileSizeInBytessequenceFileUploadAnswerTypeschema_MaxFileSizeInBytes_TMaxFileSizeType_, bool) error
	XsdGoPkgHasElems_OtherSelectionsequenceSelectionssequenceSelectionAnswerTypeschema_OtherSelection_TFreeTextAnswerType_                                                                                                                     func(*XsdGoPkgHasElems_OtherSelectionsequenceSelectionssequenceSelectionAnswerTypeschema_OtherSelection_TFreeTextAnswerType_, bool) error
	XsdGoPkgHasElem_SubTypesequenceMimeTypeschema_SubType_XsdtString_                                                                                                                                                                          func(*XsdGoPkgHasElem_SubTypesequenceMimeTypeschema_SubType_XsdtString_, bool) error
	XsdGoPkgHasElem_IsNumericsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_IsNumeric_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceIsNumeric_                                                func(*XsdGoPkgHasElem_IsNumericsequenceTxsdFreeTextAnswerTypeSequenceConstraintsConstraintssequenceFreeTextAnswerTypeschema_IsNumeric_TxsdFreeTextAnswerTypeSequenceConstraintsSequenceIsNumeric_, bool) error
	XsdGoPkgHasElem_OtherSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_OtherSelection_TFreeTextAnswerType_                                                                             func(*XsdGoPkgHasElem_OtherSelectionsequenceTxsdSelectionAnswerTypeSequenceSelectionsSelectionssequenceSelectionAnswerTypeschema_OtherSelection_TFreeTextAnswerType_, bool) error
	XsdGoPkgHasElems_QuestionchoicesequenceTxsdQuestionFormQuestionFormschema_Question_TxsdQuestionFormSequenceChoiceQuestion_                                                                                                                 func(*XsdGoPkgHasElems_QuestionchoicesequenceTxsdQuestionFormQuestionFormschema_Question_TxsdQuestionFormSequenceChoiceQuestion_, bool) error
	XsdGoPkgHasElems_NumberOfLinesSuggestionsequenceFreeTextAnswerTypeschema_NumberOfLinesSuggestion_XsdtPositiveInteger_                                                                                                                      func(*XsdGoPkgHasElems_NumberOfLinesSuggestionsequenceFreeTextAnswerTypeschema_NumberOfLinesSuggestion_XsdtPositiveInteger_, bool) error
	XsdGoPkgHasElems_QuestionForm                                                                                                                                                                                                              func(*XsdGoPkgHasElems_QuestionForm, bool) error
	XsdGoPkgHasCdata                                                                                                                                                                                                                           func(*XsdGoPkgHasCdata, bool) error
	XsdGoPkgHasElems_AppletPathsequenceJavaAppletContentTypeschema_AppletPath_TURLType_                                                                                                                                                        func(*XsdGoPkgHasElems_AppletPathsequenceJavaAppletContentTypeschema_AppletPath_TURLType_, bool) error
	XsdGoPkgHasElem_FreeTextAnswerchoiceAnswerSpecificationTypeschema_FreeTextAnswer_TFreeTextAnswerType_                                                                                                                                      func(*XsdGoPkgHasElem_FreeTextAnswerchoiceAnswerSpecificationTypeschema_FreeTextAnswer_TFreeTextAnswerType_, bool) error
	XsdGoPkgHasElems_DefaultTextsequenceFreeTextAnswerTypeschema_DefaultText_XsdtString_                                                                                                                                                       func(*XsdGoPkgHasElems_DefaultTextsequenceFreeTextAnswerTypeschema_DefaultText_XsdtString_, bool) error
	XsdGoPkgHasElems_FileUploadAnswerchoiceAnswerSpecificationTypeschema_FileUploadAnswer_TFileUploadAnswerType_                                                                                                                               func(*XsdGoPkgHasElems_FileUploadAnswerchoiceAnswerSpecificationTypeschema_FileUploadAnswer_TFileUploadAnswerType_, bool) error
	XsdGoPkgHasElem_OverviewchoicesequenceQuestionFormschema_Overview_TContentType_                                                                                                                                                            func(*XsdGoPkgHasElem_OverviewchoicesequenceQuestionFormschema_Overview_TContentType_, bool) error
	XsdGoPkgHasElem_AppletPathsequenceJavaAppletContentTypeschema_AppletPath_TURLType_                                                                                                                                                         func(*XsdGoPkgHasElem_AppletPathsequenceJavaAppletContentTypeschema_AppletPath_TURLType_, bool) error
	TxsdFreeTextAnswerTypeSequenceConstraintsSequenceIsNumeric                                                                                                                                                                                 func(*TxsdFreeTextAnswerTypeSequenceConstraintsSequenceIsNumeric, bool) error
	XsdGoPkgHasElem_SelectionAnswerchoiceAnswerSpecificationTypeschema_SelectionAnswer_TSelectionAnswerType_                                                                                                                                   func(*XsdGoPkgHasElem_SelectionAnswerchoiceAnswerSpecificationTypeschema_SelectionAnswer_TSelectionAnswerType_, bool) error
}
