//	Auto-generated by the "go-xsd" package located at:
//		github.com/metaleap/go-xsd
//	Comments on types and fields (if any) are from the XSD file located at:
//		mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/AnswerKey.xsd
package go_AnswerKey

import (
	xsdt "github.com/metaleap/go-xsd/types"
)

type XsdGoPkgHasElems_SelectionIdentifiersequenceTxsdAnswerKeySequenceQuestionSequenceAnswerOptionAnswerOptionsequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_SelectionIdentifier_XsdtString_ struct {
	SelectionIdentifiers []xsdt.String `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/AnswerKey.xsd SelectionIdentifier"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_SelectionIdentifiersequenceTxsdAnswerKeySequenceQuestionSequenceAnswerOptionAnswerOptionsequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_SelectionIdentifier_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_SelectionIdentifiersequenceTxsdAnswerKeySequenceQuestionSequenceAnswerOptionAnswerOptionsequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_SelectionIdentifier_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_SelectionIdentifiersequenceTxsdAnswerKeySequenceQuestionSequenceAnswerOptionAnswerOptionsequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_SelectionIdentifier_XsdtString_ instance.
func (me *XsdGoPkgHasElems_SelectionIdentifiersequenceTxsdAnswerKeySequenceQuestionSequenceAnswerOptionAnswerOptionsequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_SelectionIdentifier_XsdtString_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_SelectionIdentifiersequenceTxsdAnswerKeySequenceQuestionSequenceAnswerOptionAnswerOptionsequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_SelectionIdentifier_XsdtString_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_AnswerScoresequenceTxsdAnswerKeySequenceQuestionSequenceAnswerOptionAnswerOptionsequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_AnswerScore_XsdtInt_ struct {
	AnswerScore xsdt.Int `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/AnswerKey.xsd AnswerScore"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_AnswerScoresequenceTxsdAnswerKeySequenceQuestionSequenceAnswerOptionAnswerOptionsequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_AnswerScore_XsdtInt_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_AnswerScoresequenceTxsdAnswerKeySequenceQuestionSequenceAnswerOptionAnswerOptionsequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_AnswerScore_XsdtInt_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_AnswerScoresequenceTxsdAnswerKeySequenceQuestionSequenceAnswerOptionAnswerOptionsequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_AnswerScore_XsdtInt_ instance.
func (me *XsdGoPkgHasElem_AnswerScoresequenceTxsdAnswerKeySequenceQuestionSequenceAnswerOptionAnswerOptionsequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_AnswerScore_XsdtInt_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_AnswerScoresequenceTxsdAnswerKeySequenceQuestionSequenceAnswerOptionAnswerOptionsequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_AnswerScore_XsdtInt_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TxsdAnswerKeySequenceQuestionSequenceAnswerOption struct {
	XsdGoPkgHasElems_SelectionIdentifiersequenceTxsdAnswerKeySequenceQuestionSequenceAnswerOptionAnswerOptionsequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_SelectionIdentifier_XsdtString_

	XsdGoPkgHasElem_AnswerScoresequenceTxsdAnswerKeySequenceQuestionSequenceAnswerOptionAnswerOptionsequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_AnswerScore_XsdtInt_
}

//	If the WalkHandlers.TxsdAnswerKeySequenceQuestionSequenceAnswerOption function is not nil (ie. was set by outside code), calls it with this TxsdAnswerKeySequenceQuestionSequenceAnswerOption instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TxsdAnswerKeySequenceQuestionSequenceAnswerOption instance.
func (me *TxsdAnswerKeySequenceQuestionSequenceAnswerOption) Walk() (err error) {
	if fn := WalkHandlers.TxsdAnswerKeySequenceQuestionSequenceAnswerOption; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElem_AnswerScoresequenceTxsdAnswerKeySequenceQuestionSequenceAnswerOptionAnswerOptionsequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_AnswerScore_XsdtInt_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElems_SelectionIdentifiersequenceTxsdAnswerKeySequenceQuestionSequenceAnswerOptionAnswerOptionsequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_SelectionIdentifier_XsdtString_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_AnswerOptionsequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_AnswerOption_TxsdAnswerKeySequenceQuestionSequenceAnswerOption_ struct {
	AnswerOptions []*TxsdAnswerKeySequenceQuestionSequenceAnswerOption `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/AnswerKey.xsd AnswerOption"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_AnswerOptionsequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_AnswerOption_TxsdAnswerKeySequenceQuestionSequenceAnswerOption_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_AnswerOptionsequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_AnswerOption_TxsdAnswerKeySequenceQuestionSequenceAnswerOption_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_AnswerOptionsequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_AnswerOption_TxsdAnswerKeySequenceQuestionSequenceAnswerOption_ instance.
func (me *XsdGoPkgHasElems_AnswerOptionsequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_AnswerOption_TxsdAnswerKeySequenceQuestionSequenceAnswerOption_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_AnswerOptionsequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_AnswerOption_TxsdAnswerKeySequenceQuestionSequenceAnswerOption_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.AnswerOptions {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_DefaultScoresequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_DefaultScore_XsdtInt_ struct {
	DefaultScore xsdt.Int `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/AnswerKey.xsd DefaultScore"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_DefaultScoresequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_DefaultScore_XsdtInt_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_DefaultScoresequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_DefaultScore_XsdtInt_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_DefaultScoresequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_DefaultScore_XsdtInt_ instance.
func (me *XsdGoPkgHasElem_DefaultScoresequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_DefaultScore_XsdtInt_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_DefaultScoresequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_DefaultScore_XsdtInt_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_QuestionIdentifiersequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_QuestionIdentifier_XsdtString_ struct {
	QuestionIdentifier xsdt.String `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/AnswerKey.xsd QuestionIdentifier"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_QuestionIdentifiersequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_QuestionIdentifier_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_QuestionIdentifiersequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_QuestionIdentifier_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_QuestionIdentifiersequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_QuestionIdentifier_XsdtString_ instance.
func (me *XsdGoPkgHasElem_QuestionIdentifiersequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_QuestionIdentifier_XsdtString_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_QuestionIdentifiersequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_QuestionIdentifier_XsdtString_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TxsdAnswerKeySequenceQuestion struct {
	XsdGoPkgHasElem_QuestionIdentifiersequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_QuestionIdentifier_XsdtString_

	XsdGoPkgHasElems_AnswerOptionsequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_AnswerOption_TxsdAnswerKeySequenceQuestionSequenceAnswerOption_

	XsdGoPkgHasElem_DefaultScoresequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_DefaultScore_XsdtInt_
}

//	If the WalkHandlers.TxsdAnswerKeySequenceQuestion function is not nil (ie. was set by outside code), calls it with this TxsdAnswerKeySequenceQuestion instance as the single argument. Then calls the Walk() method on 3/3 embed(s) and 0/0 field(s) belonging to this TxsdAnswerKeySequenceQuestion instance.
func (me *TxsdAnswerKeySequenceQuestion) Walk() (err error) {
	if fn := WalkHandlers.TxsdAnswerKeySequenceQuestion; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElem_QuestionIdentifiersequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_QuestionIdentifier_XsdtString_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElems_AnswerOptionsequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_AnswerOption_TxsdAnswerKeySequenceQuestionSequenceAnswerOption_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_DefaultScoresequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_DefaultScore_XsdtInt_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_QuestionsequenceTxsdAnswerKeyAnswerKeyschema_Question_TxsdAnswerKeySequenceQuestion_ struct {
	Questions []*TxsdAnswerKeySequenceQuestion `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/AnswerKey.xsd Question"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_QuestionsequenceTxsdAnswerKeyAnswerKeyschema_Question_TxsdAnswerKeySequenceQuestion_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_QuestionsequenceTxsdAnswerKeyAnswerKeyschema_Question_TxsdAnswerKeySequenceQuestion_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_QuestionsequenceTxsdAnswerKeyAnswerKeyschema_Question_TxsdAnswerKeySequenceQuestion_ instance.
func (me *XsdGoPkgHasElems_QuestionsequenceTxsdAnswerKeyAnswerKeyschema_Question_TxsdAnswerKeySequenceQuestion_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_QuestionsequenceTxsdAnswerKeyAnswerKeyschema_Question_TxsdAnswerKeySequenceQuestion_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.Questions {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_MaximumSummedScoresequenceTxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMappingPercentageMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_MaximumSummedScore_XsdtInt_ struct {
	MaximumSummedScore xsdt.Int `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/AnswerKey.xsd MaximumSummedScore"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_MaximumSummedScoresequenceTxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMappingPercentageMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_MaximumSummedScore_XsdtInt_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_MaximumSummedScoresequenceTxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMappingPercentageMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_MaximumSummedScore_XsdtInt_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_MaximumSummedScoresequenceTxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMappingPercentageMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_MaximumSummedScore_XsdtInt_ instance.
func (me *XsdGoPkgHasElem_MaximumSummedScoresequenceTxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMappingPercentageMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_MaximumSummedScore_XsdtInt_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_MaximumSummedScoresequenceTxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMappingPercentageMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_MaximumSummedScore_XsdtInt_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMapping struct {
	XsdGoPkgHasElem_MaximumSummedScoresequenceTxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMappingPercentageMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_MaximumSummedScore_XsdtInt_
}

//	If the WalkHandlers.TxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMapping function is not nil (ie. was set by outside code), calls it with this TxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMapping instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMapping instance.
func (me *TxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMapping) Walk() (err error) {
	if fn := WalkHandlers.TxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMapping; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElem_MaximumSummedScoresequenceTxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMappingPercentageMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_MaximumSummedScore_XsdtInt_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_PercentageMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_PercentageMapping_TxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMapping_ struct {
	PercentageMapping *TxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMapping `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/AnswerKey.xsd PercentageMapping"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_PercentageMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_PercentageMapping_TxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMapping_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_PercentageMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_PercentageMapping_TxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMapping_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_PercentageMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_PercentageMapping_TxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMapping_ instance.
func (me *XsdGoPkgHasElem_PercentageMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_PercentageMapping_TxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMapping_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_PercentageMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_PercentageMapping_TxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMapping_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.PercentageMapping.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_SummedScoreMultipliersequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceScaleMappingScaleMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_SummedScoreMultiplier_XsdtDouble_ struct {
	SummedScoreMultiplier xsdt.Double `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/AnswerKey.xsd SummedScoreMultiplier"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_SummedScoreMultipliersequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceScaleMappingScaleMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_SummedScoreMultiplier_XsdtDouble_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_SummedScoreMultipliersequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceScaleMappingScaleMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_SummedScoreMultiplier_XsdtDouble_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_SummedScoreMultipliersequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceScaleMappingScaleMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_SummedScoreMultiplier_XsdtDouble_ instance.
func (me *XsdGoPkgHasElem_SummedScoreMultipliersequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceScaleMappingScaleMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_SummedScoreMultiplier_XsdtDouble_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_SummedScoreMultipliersequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceScaleMappingScaleMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_SummedScoreMultiplier_XsdtDouble_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TxsdAnswerKeySequenceQualificationValueMappingChoiceScaleMapping struct {
	XsdGoPkgHasElem_SummedScoreMultipliersequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceScaleMappingScaleMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_SummedScoreMultiplier_XsdtDouble_
}

//	If the WalkHandlers.TxsdAnswerKeySequenceQualificationValueMappingChoiceScaleMapping function is not nil (ie. was set by outside code), calls it with this TxsdAnswerKeySequenceQualificationValueMappingChoiceScaleMapping instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TxsdAnswerKeySequenceQualificationValueMappingChoiceScaleMapping instance.
func (me *TxsdAnswerKeySequenceQualificationValueMappingChoiceScaleMapping) Walk() (err error) {
	if fn := WalkHandlers.TxsdAnswerKeySequenceQualificationValueMappingChoiceScaleMapping; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElem_SummedScoreMultipliersequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceScaleMappingScaleMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_SummedScoreMultiplier_XsdtDouble_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_ScaleMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_ScaleMapping_TxsdAnswerKeySequenceQualificationValueMappingChoiceScaleMapping_ struct {
	ScaleMapping *TxsdAnswerKeySequenceQualificationValueMappingChoiceScaleMapping `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/AnswerKey.xsd ScaleMapping"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_ScaleMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_ScaleMapping_TxsdAnswerKeySequenceQualificationValueMappingChoiceScaleMapping_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ScaleMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_ScaleMapping_TxsdAnswerKeySequenceQualificationValueMappingChoiceScaleMapping_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_ScaleMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_ScaleMapping_TxsdAnswerKeySequenceQualificationValueMappingChoiceScaleMapping_ instance.
func (me *XsdGoPkgHasElem_ScaleMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_ScaleMapping_TxsdAnswerKeySequenceQualificationValueMappingChoiceScaleMapping_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_ScaleMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_ScaleMapping_TxsdAnswerKeySequenceQualificationValueMappingChoiceScaleMapping_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.ScaleMapping.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_InclusiveLowerBoundsequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRangeSummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_InclusiveLowerBound_XsdtInt_ struct {
	InclusiveLowerBound xsdt.Int `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/AnswerKey.xsd InclusiveLowerBound"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_InclusiveLowerBoundsequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRangeSummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_InclusiveLowerBound_XsdtInt_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_InclusiveLowerBoundsequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRangeSummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_InclusiveLowerBound_XsdtInt_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_InclusiveLowerBoundsequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRangeSummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_InclusiveLowerBound_XsdtInt_ instance.
func (me *XsdGoPkgHasElem_InclusiveLowerBoundsequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRangeSummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_InclusiveLowerBound_XsdtInt_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_InclusiveLowerBoundsequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRangeSummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_InclusiveLowerBound_XsdtInt_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_InclusiveUpperBoundsequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRangeSummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_InclusiveUpperBound_XsdtInt_ struct {
	InclusiveUpperBound xsdt.Int `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/AnswerKey.xsd InclusiveUpperBound"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_InclusiveUpperBoundsequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRangeSummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_InclusiveUpperBound_XsdtInt_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_InclusiveUpperBoundsequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRangeSummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_InclusiveUpperBound_XsdtInt_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_InclusiveUpperBoundsequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRangeSummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_InclusiveUpperBound_XsdtInt_ instance.
func (me *XsdGoPkgHasElem_InclusiveUpperBoundsequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRangeSummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_InclusiveUpperBound_XsdtInt_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_InclusiveUpperBoundsequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRangeSummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_InclusiveUpperBound_XsdtInt_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_QualificationValuesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRangeSummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_QualificationValue_XsdtInt_ struct {
	QualificationValue xsdt.Int `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/AnswerKey.xsd QualificationValue"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_QualificationValuesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRangeSummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_QualificationValue_XsdtInt_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_QualificationValuesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRangeSummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_QualificationValue_XsdtInt_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_QualificationValuesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRangeSummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_QualificationValue_XsdtInt_ instance.
func (me *XsdGoPkgHasElem_QualificationValuesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRangeSummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_QualificationValue_XsdtInt_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_QualificationValuesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRangeSummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_QualificationValue_XsdtInt_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRange struct {
	XsdGoPkgHasElem_InclusiveUpperBoundsequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRangeSummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_InclusiveUpperBound_XsdtInt_

	XsdGoPkgHasElem_QualificationValuesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRangeSummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_QualificationValue_XsdtInt_

	XsdGoPkgHasElem_InclusiveLowerBoundsequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRangeSummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_InclusiveLowerBound_XsdtInt_
}

//	If the WalkHandlers.TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRange function is not nil (ie. was set by outside code), calls it with this TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRange instance as the single argument. Then calls the Walk() method on 3/3 embed(s) and 0/0 field(s) belonging to this TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRange instance.
func (me *TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRange) Walk() (err error) {
	if fn := WalkHandlers.TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRange; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElem_InclusiveLowerBoundsequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRangeSummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_InclusiveLowerBound_XsdtInt_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_InclusiveUpperBoundsequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRangeSummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_InclusiveUpperBound_XsdtInt_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_QualificationValuesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRangeSummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_QualificationValue_XsdtInt_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_SummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_SummedScoreRange_TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRange_ struct {
	SummedScoreRanges []*TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRange `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/AnswerKey.xsd SummedScoreRange"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_SummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_SummedScoreRange_TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRange_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_SummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_SummedScoreRange_TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRange_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_SummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_SummedScoreRange_TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRange_ instance.
func (me *XsdGoPkgHasElems_SummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_SummedScoreRange_TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRange_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_SummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_SummedScoreRange_TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRange_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.SummedScoreRanges {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_OutOfRangeQualificationValuesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_OutOfRangeQualificationValue_XsdtInt_ struct {
	OutOfRangeQualificationValue xsdt.Int `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/AnswerKey.xsd OutOfRangeQualificationValue"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_OutOfRangeQualificationValuesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_OutOfRangeQualificationValue_XsdtInt_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_OutOfRangeQualificationValuesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_OutOfRangeQualificationValue_XsdtInt_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_OutOfRangeQualificationValuesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_OutOfRangeQualificationValue_XsdtInt_ instance.
func (me *XsdGoPkgHasElem_OutOfRangeQualificationValuesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_OutOfRangeQualificationValue_XsdtInt_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_OutOfRangeQualificationValuesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_OutOfRangeQualificationValue_XsdtInt_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMapping struct {
	XsdGoPkgHasElem_OutOfRangeQualificationValuesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_OutOfRangeQualificationValue_XsdtInt_

	XsdGoPkgHasElems_SummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_SummedScoreRange_TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRange_
}

//	If the WalkHandlers.TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMapping function is not nil (ie. was set by outside code), calls it with this TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMapping instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMapping instance.
func (me *TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMapping) Walk() (err error) {
	if fn := WalkHandlers.TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMapping; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_SummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_SummedScoreRange_TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRange_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_OutOfRangeQualificationValuesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_OutOfRangeQualificationValue_XsdtInt_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_RangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_RangeMapping_TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMapping_ struct {
	RangeMapping *TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMapping `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/AnswerKey.xsd RangeMapping"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_RangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_RangeMapping_TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMapping_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_RangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_RangeMapping_TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMapping_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_RangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_RangeMapping_TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMapping_ instance.
func (me *XsdGoPkgHasElem_RangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_RangeMapping_TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMapping_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_RangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_RangeMapping_TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMapping_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.RangeMapping.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TxsdAnswerKeySequenceQualificationValueMapping struct {
	XsdGoPkgHasElem_PercentageMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_PercentageMapping_TxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMapping_

	XsdGoPkgHasElem_ScaleMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_ScaleMapping_TxsdAnswerKeySequenceQualificationValueMappingChoiceScaleMapping_

	XsdGoPkgHasElem_RangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_RangeMapping_TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMapping_
}

//	If the WalkHandlers.TxsdAnswerKeySequenceQualificationValueMapping function is not nil (ie. was set by outside code), calls it with this TxsdAnswerKeySequenceQualificationValueMapping instance as the single argument. Then calls the Walk() method on 3/3 embed(s) and 0/0 field(s) belonging to this TxsdAnswerKeySequenceQualificationValueMapping instance.
func (me *TxsdAnswerKeySequenceQualificationValueMapping) Walk() (err error) {
	if fn := WalkHandlers.TxsdAnswerKeySequenceQualificationValueMapping; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElem_RangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_RangeMapping_TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMapping_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_PercentageMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_PercentageMapping_TxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMapping_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_ScaleMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_ScaleMapping_TxsdAnswerKeySequenceQualificationValueMappingChoiceScaleMapping_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_QualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_QualificationValueMapping_TxsdAnswerKeySequenceQualificationValueMapping_ struct {
	QualificationValueMapping *TxsdAnswerKeySequenceQualificationValueMapping `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/AnswerKey.xsd QualificationValueMapping"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_QualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_QualificationValueMapping_TxsdAnswerKeySequenceQualificationValueMapping_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_QualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_QualificationValueMapping_TxsdAnswerKeySequenceQualificationValueMapping_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_QualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_QualificationValueMapping_TxsdAnswerKeySequenceQualificationValueMapping_ instance.
func (me *XsdGoPkgHasElem_QualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_QualificationValueMapping_TxsdAnswerKeySequenceQualificationValueMapping_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_QualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_QualificationValueMapping_TxsdAnswerKeySequenceQualificationValueMapping_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.QualificationValueMapping.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TxsdAnswerKey struct {
	XsdGoPkgHasElems_QuestionsequenceTxsdAnswerKeyAnswerKeyschema_Question_TxsdAnswerKeySequenceQuestion_

	XsdGoPkgHasElem_QualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_QualificationValueMapping_TxsdAnswerKeySequenceQualificationValueMapping_
}

//	If the WalkHandlers.TxsdAnswerKey function is not nil (ie. was set by outside code), calls it with this TxsdAnswerKey instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TxsdAnswerKey instance.
func (me *TxsdAnswerKey) Walk() (err error) {
	if fn := WalkHandlers.TxsdAnswerKey; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_QuestionsequenceTxsdAnswerKeyAnswerKeyschema_Question_TxsdAnswerKeySequenceQuestion_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_QualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_QualificationValueMapping_TxsdAnswerKeySequenceQualificationValueMapping_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_AnswerKey struct {
	AnswerKey *TxsdAnswerKey `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/AnswerKey.xsd AnswerKey"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_AnswerKey function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_AnswerKey instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_AnswerKey instance.
func (me *XsdGoPkgHasElem_AnswerKey) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_AnswerKey; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.AnswerKey.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_AnswerKey struct {
	AnswerKeys []*TxsdAnswerKey `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/AnswerKey.xsd AnswerKey"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_AnswerKey function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_AnswerKey instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_AnswerKey instance.
func (me *XsdGoPkgHasElems_AnswerKey) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_AnswerKey; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.AnswerKeys {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_OutOfRangeQualificationValuesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_OutOfRangeQualificationValue_XsdtInt_ struct {
	OutOfRangeQualificationValues []xsdt.Int `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/AnswerKey.xsd OutOfRangeQualificationValue"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_OutOfRangeQualificationValuesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_OutOfRangeQualificationValue_XsdtInt_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_OutOfRangeQualificationValuesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_OutOfRangeQualificationValue_XsdtInt_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_OutOfRangeQualificationValuesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_OutOfRangeQualificationValue_XsdtInt_ instance.
func (me *XsdGoPkgHasElems_OutOfRangeQualificationValuesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_OutOfRangeQualificationValue_XsdtInt_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_OutOfRangeQualificationValuesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_OutOfRangeQualificationValue_XsdtInt_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_QuestionIdentifiersequenceQuestionsequenceAnswerKeyschema_QuestionIdentifier_XsdtString_ struct {
	QuestionIdentifiers []xsdt.String `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/AnswerKey.xsd QuestionIdentifier"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_QuestionIdentifiersequenceQuestionsequenceAnswerKeyschema_QuestionIdentifier_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_QuestionIdentifiersequenceQuestionsequenceAnswerKeyschema_QuestionIdentifier_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_QuestionIdentifiersequenceQuestionsequenceAnswerKeyschema_QuestionIdentifier_XsdtString_ instance.
func (me *XsdGoPkgHasElems_QuestionIdentifiersequenceQuestionsequenceAnswerKeyschema_QuestionIdentifier_XsdtString_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_QuestionIdentifiersequenceQuestionsequenceAnswerKeyschema_QuestionIdentifier_XsdtString_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_QualificationValuesequenceSummedScoreRangesequenceRangeMappingchoiceQualificationValueMappingsequenceAnswerKeyschema_QualificationValue_XsdtInt_ struct {
	QualificationValues []xsdt.Int `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/AnswerKey.xsd QualificationValue"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_QualificationValuesequenceSummedScoreRangesequenceRangeMappingchoiceQualificationValueMappingsequenceAnswerKeyschema_QualificationValue_XsdtInt_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_QualificationValuesequenceSummedScoreRangesequenceRangeMappingchoiceQualificationValueMappingsequenceAnswerKeyschema_QualificationValue_XsdtInt_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_QualificationValuesequenceSummedScoreRangesequenceRangeMappingchoiceQualificationValueMappingsequenceAnswerKeyschema_QualificationValue_XsdtInt_ instance.
func (me *XsdGoPkgHasElems_QualificationValuesequenceSummedScoreRangesequenceRangeMappingchoiceQualificationValueMappingsequenceAnswerKeyschema_QualificationValue_XsdtInt_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_QualificationValuesequenceSummedScoreRangesequenceRangeMappingchoiceQualificationValueMappingsequenceAnswerKeyschema_QualificationValue_XsdtInt_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasCdata struct {
	XsdGoPkgCDATA string `xml:",chardata"`
}

//	If the WalkHandlers.XsdGoPkgHasCdata function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasCdata instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasCdata instance.
func (me *XsdGoPkgHasCdata) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasCdata; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_PercentageMappingchoiceQualificationValueMappingsequenceAnswerKeyschema_PercentageMapping_TxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMapping_ struct {
	PercentageMappings []*TxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMapping `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/AnswerKey.xsd PercentageMapping"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_PercentageMappingchoiceQualificationValueMappingsequenceAnswerKeyschema_PercentageMapping_TxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMapping_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_PercentageMappingchoiceQualificationValueMappingsequenceAnswerKeyschema_PercentageMapping_TxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMapping_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_PercentageMappingchoiceQualificationValueMappingsequenceAnswerKeyschema_PercentageMapping_TxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMapping_ instance.
func (me *XsdGoPkgHasElems_PercentageMappingchoiceQualificationValueMappingsequenceAnswerKeyschema_PercentageMapping_TxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMapping_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_PercentageMappingchoiceQualificationValueMappingsequenceAnswerKeyschema_PercentageMapping_TxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMapping_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.PercentageMappings {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_InclusiveUpperBoundsequenceSummedScoreRangesequenceRangeMappingchoiceQualificationValueMappingsequenceAnswerKeyschema_InclusiveUpperBound_XsdtInt_ struct {
	InclusiveUpperBounds []xsdt.Int `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/AnswerKey.xsd InclusiveUpperBound"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_InclusiveUpperBoundsequenceSummedScoreRangesequenceRangeMappingchoiceQualificationValueMappingsequenceAnswerKeyschema_InclusiveUpperBound_XsdtInt_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_InclusiveUpperBoundsequenceSummedScoreRangesequenceRangeMappingchoiceQualificationValueMappingsequenceAnswerKeyschema_InclusiveUpperBound_XsdtInt_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_InclusiveUpperBoundsequenceSummedScoreRangesequenceRangeMappingchoiceQualificationValueMappingsequenceAnswerKeyschema_InclusiveUpperBound_XsdtInt_ instance.
func (me *XsdGoPkgHasElems_InclusiveUpperBoundsequenceSummedScoreRangesequenceRangeMappingchoiceQualificationValueMappingsequenceAnswerKeyschema_InclusiveUpperBound_XsdtInt_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_InclusiveUpperBoundsequenceSummedScoreRangesequenceRangeMappingchoiceQualificationValueMappingsequenceAnswerKeyschema_InclusiveUpperBound_XsdtInt_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_ScaleMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_ScaleMapping_TxsdAnswerKeySequenceQualificationValueMappingChoiceScaleMapping_ struct {
	ScaleMappings []*TxsdAnswerKeySequenceQualificationValueMappingChoiceScaleMapping `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/AnswerKey.xsd ScaleMapping"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_ScaleMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_ScaleMapping_TxsdAnswerKeySequenceQualificationValueMappingChoiceScaleMapping_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_ScaleMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_ScaleMapping_TxsdAnswerKeySequenceQualificationValueMappingChoiceScaleMapping_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_ScaleMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_ScaleMapping_TxsdAnswerKeySequenceQualificationValueMappingChoiceScaleMapping_ instance.
func (me *XsdGoPkgHasElems_ScaleMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_ScaleMapping_TxsdAnswerKeySequenceQualificationValueMappingChoiceScaleMapping_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_ScaleMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_ScaleMapping_TxsdAnswerKeySequenceQualificationValueMappingChoiceScaleMapping_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.ScaleMappings {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_QualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_QualificationValueMapping_TxsdAnswerKeySequenceQualificationValueMapping_ struct {
	QualificationValueMappings []*TxsdAnswerKeySequenceQualificationValueMapping `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/AnswerKey.xsd QualificationValueMapping"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_QualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_QualificationValueMapping_TxsdAnswerKeySequenceQualificationValueMapping_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_QualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_QualificationValueMapping_TxsdAnswerKeySequenceQualificationValueMapping_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_QualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_QualificationValueMapping_TxsdAnswerKeySequenceQualificationValueMapping_ instance.
func (me *XsdGoPkgHasElems_QualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_QualificationValueMapping_TxsdAnswerKeySequenceQualificationValueMapping_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_QualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_QualificationValueMapping_TxsdAnswerKeySequenceQualificationValueMapping_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.QualificationValueMappings {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_AnswerScoresequenceAnswerOptionsequenceQuestionsequenceAnswerKeyschema_AnswerScore_XsdtInt_ struct {
	AnswerScores []xsdt.Int `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/AnswerKey.xsd AnswerScore"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_AnswerScoresequenceAnswerOptionsequenceQuestionsequenceAnswerKeyschema_AnswerScore_XsdtInt_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_AnswerScoresequenceAnswerOptionsequenceQuestionsequenceAnswerKeyschema_AnswerScore_XsdtInt_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_AnswerScoresequenceAnswerOptionsequenceQuestionsequenceAnswerKeyschema_AnswerScore_XsdtInt_ instance.
func (me *XsdGoPkgHasElems_AnswerScoresequenceAnswerOptionsequenceQuestionsequenceAnswerKeyschema_AnswerScore_XsdtInt_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_AnswerScoresequenceAnswerOptionsequenceQuestionsequenceAnswerKeyschema_AnswerScore_XsdtInt_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_DefaultScoresequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_DefaultScore_XsdtInt_ struct {
	DefaultScores []xsdt.Int `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/AnswerKey.xsd DefaultScore"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_DefaultScoresequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_DefaultScore_XsdtInt_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_DefaultScoresequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_DefaultScore_XsdtInt_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_DefaultScoresequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_DefaultScore_XsdtInt_ instance.
func (me *XsdGoPkgHasElems_DefaultScoresequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_DefaultScore_XsdtInt_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_DefaultScoresequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_DefaultScore_XsdtInt_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_RangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_RangeMapping_TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMapping_ struct {
	RangeMappings []*TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMapping `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/AnswerKey.xsd RangeMapping"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_RangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_RangeMapping_TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMapping_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_RangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_RangeMapping_TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMapping_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_RangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_RangeMapping_TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMapping_ instance.
func (me *XsdGoPkgHasElems_RangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_RangeMapping_TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMapping_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_RangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_RangeMapping_TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMapping_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.RangeMappings {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_InclusiveLowerBoundsequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRangeSummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_InclusiveLowerBound_XsdtInt_ struct {
	InclusiveLowerBounds []xsdt.Int `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/AnswerKey.xsd InclusiveLowerBound"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_InclusiveLowerBoundsequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRangeSummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_InclusiveLowerBound_XsdtInt_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_InclusiveLowerBoundsequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRangeSummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_InclusiveLowerBound_XsdtInt_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_InclusiveLowerBoundsequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRangeSummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_InclusiveLowerBound_XsdtInt_ instance.
func (me *XsdGoPkgHasElems_InclusiveLowerBoundsequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRangeSummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_InclusiveLowerBound_XsdtInt_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_InclusiveLowerBoundsequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRangeSummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_InclusiveLowerBound_XsdtInt_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_QuestionsequenceTxsdAnswerKeyAnswerKeyschema_Question_TxsdAnswerKeySequenceQuestion_ struct {
	Question *TxsdAnswerKeySequenceQuestion `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/AnswerKey.xsd Question"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_QuestionsequenceTxsdAnswerKeyAnswerKeyschema_Question_TxsdAnswerKeySequenceQuestion_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_QuestionsequenceTxsdAnswerKeyAnswerKeyschema_Question_TxsdAnswerKeySequenceQuestion_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_QuestionsequenceTxsdAnswerKeyAnswerKeyschema_Question_TxsdAnswerKeySequenceQuestion_ instance.
func (me *XsdGoPkgHasElem_QuestionsequenceTxsdAnswerKeyAnswerKeyschema_Question_TxsdAnswerKeySequenceQuestion_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_QuestionsequenceTxsdAnswerKeyAnswerKeyschema_Question_TxsdAnswerKeySequenceQuestion_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.Question.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_MaximumSummedScoresequenceTxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMappingPercentageMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_MaximumSummedScore_XsdtInt_ struct {
	MaximumSummedScores []xsdt.Int `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/AnswerKey.xsd MaximumSummedScore"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_MaximumSummedScoresequenceTxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMappingPercentageMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_MaximumSummedScore_XsdtInt_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_MaximumSummedScoresequenceTxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMappingPercentageMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_MaximumSummedScore_XsdtInt_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_MaximumSummedScoresequenceTxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMappingPercentageMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_MaximumSummedScore_XsdtInt_ instance.
func (me *XsdGoPkgHasElems_MaximumSummedScoresequenceTxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMappingPercentageMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_MaximumSummedScore_XsdtInt_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_MaximumSummedScoresequenceTxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMappingPercentageMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_MaximumSummedScore_XsdtInt_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_SelectionIdentifiersequenceAnswerOptionsequenceQuestionsequenceAnswerKeyschema_SelectionIdentifier_XsdtString_ struct {
	SelectionIdentifier xsdt.String `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/AnswerKey.xsd SelectionIdentifier"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_SelectionIdentifiersequenceAnswerOptionsequenceQuestionsequenceAnswerKeyschema_SelectionIdentifier_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_SelectionIdentifiersequenceAnswerOptionsequenceQuestionsequenceAnswerKeyschema_SelectionIdentifier_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_SelectionIdentifiersequenceAnswerOptionsequenceQuestionsequenceAnswerKeyschema_SelectionIdentifier_XsdtString_ instance.
func (me *XsdGoPkgHasElem_SelectionIdentifiersequenceAnswerOptionsequenceQuestionsequenceAnswerKeyschema_SelectionIdentifier_XsdtString_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_SelectionIdentifiersequenceAnswerOptionsequenceQuestionsequenceAnswerKeyschema_SelectionIdentifier_XsdtString_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_AnswerOptionsequenceQuestionsequenceAnswerKeyschema_AnswerOption_TxsdAnswerKeySequenceQuestionSequenceAnswerOption_ struct {
	AnswerOption *TxsdAnswerKeySequenceQuestionSequenceAnswerOption `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/AnswerKey.xsd AnswerOption"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_AnswerOptionsequenceQuestionsequenceAnswerKeyschema_AnswerOption_TxsdAnswerKeySequenceQuestionSequenceAnswerOption_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_AnswerOptionsequenceQuestionsequenceAnswerKeyschema_AnswerOption_TxsdAnswerKeySequenceQuestionSequenceAnswerOption_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_AnswerOptionsequenceQuestionsequenceAnswerKeyschema_AnswerOption_TxsdAnswerKeySequenceQuestionSequenceAnswerOption_ instance.
func (me *XsdGoPkgHasElem_AnswerOptionsequenceQuestionsequenceAnswerKeyschema_AnswerOption_TxsdAnswerKeySequenceQuestionSequenceAnswerOption_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_AnswerOptionsequenceQuestionsequenceAnswerKeyschema_AnswerOption_TxsdAnswerKeySequenceQuestionSequenceAnswerOption_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.AnswerOption.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_SummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_SummedScoreRange_TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRange_ struct {
	SummedScoreRange *TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRange `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/AnswerKey.xsd SummedScoreRange"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_SummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_SummedScoreRange_TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRange_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_SummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_SummedScoreRange_TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRange_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_SummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_SummedScoreRange_TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRange_ instance.
func (me *XsdGoPkgHasElem_SummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_SummedScoreRange_TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRange_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_SummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_SummedScoreRange_TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRange_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.SummedScoreRange.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_SummedScoreMultipliersequenceScaleMappingchoiceQualificationValueMappingsequenceAnswerKeyschema_SummedScoreMultiplier_XsdtDouble_ struct {
	SummedScoreMultipliers []xsdt.Double `xml:"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/AnswerKey.xsd SummedScoreMultiplier"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_SummedScoreMultipliersequenceScaleMappingchoiceQualificationValueMappingsequenceAnswerKeyschema_SummedScoreMultiplier_XsdtDouble_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_SummedScoreMultipliersequenceScaleMappingchoiceQualificationValueMappingsequenceAnswerKeyschema_SummedScoreMultiplier_XsdtDouble_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_SummedScoreMultipliersequenceScaleMappingchoiceQualificationValueMappingsequenceAnswerKeyschema_SummedScoreMultiplier_XsdtDouble_ instance.
func (me *XsdGoPkgHasElems_SummedScoreMultipliersequenceScaleMappingchoiceQualificationValueMappingsequenceAnswerKeyschema_SummedScoreMultiplier_XsdtDouble_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_SummedScoreMultipliersequenceScaleMappingchoiceQualificationValueMappingsequenceAnswerKeyschema_SummedScoreMultiplier_XsdtDouble_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

var (
	//	Set this to false to break a Walk() immediately as soon as the first error is returned by a custom handler function.
	//	If true, Walk() proceeds and accumulates all errors in the WalkErrors slice.
	WalkContinueOnError = true
	//	Contains all errors accumulated during Walk()s. If you're using this, you need to reset this yourself as needed prior to a fresh Walk().
	WalkErrors []error
	//	Your custom error-handling function, if required.
	WalkOnError func(error)
	//	Provides 45 strong-typed hooks for your own custom handler functions to be invoked when the Walk() method is called on any instance of any (non-attribute-related) struct type defined in this package.
	//	If your custom handler does get called at all for a given struct instance, then it always gets called twice, first with the 'enter' bool argument set to true, then (after having Walk()ed all subordinate struct instances, if any) once again with it set to false.
	WalkHandlers = &XsdGoPkgWalkHandlers{}
)

//	Provides 45 strong-typed hooks for your own custom handler functions to be invoked when the Walk() method is called on any instance of any (non-attribute-related) struct type defined in this package.
//	If your custom handler does get called at all for a given struct instance, then it always gets called twice, first with the 'enter' bool argument set to true, then (after having Walk()ed all subordinate struct instances, if any) once again with it set to false.
type XsdGoPkgWalkHandlers struct {
	XsdGoPkgHasElem_AnswerScoresequenceTxsdAnswerKeySequenceQuestionSequenceAnswerOptionAnswerOptionsequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_AnswerScore_XsdtInt_                                                                                                                                                                                 func(*XsdGoPkgHasElem_AnswerScoresequenceTxsdAnswerKeySequenceQuestionSequenceAnswerOptionAnswerOptionsequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_AnswerScore_XsdtInt_, bool) error
	TxsdAnswerKey                                                                                                                                                                                                                                                                                                                                                                          func(*TxsdAnswerKey, bool) error
	XsdGoPkgHasElem_SummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_SummedScoreRange_TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRange_                                       func(*XsdGoPkgHasElem_SummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_SummedScoreRange_TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRange_, bool) error
	XsdGoPkgHasElems_OutOfRangeQualificationValuesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_OutOfRangeQualificationValue_XsdtInt_                                                                                               func(*XsdGoPkgHasElems_OutOfRangeQualificationValuesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_OutOfRangeQualificationValue_XsdtInt_, bool) error
	XsdGoPkgHasElems_PercentageMappingchoiceQualificationValueMappingsequenceAnswerKeyschema_PercentageMapping_TxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMapping_                                                                                                                                                                                                      func(*XsdGoPkgHasElems_PercentageMappingchoiceQualificationValueMappingsequenceAnswerKeyschema_PercentageMapping_TxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMapping_, bool) error
	XsdGoPkgHasElems_SelectionIdentifiersequenceTxsdAnswerKeySequenceQuestionSequenceAnswerOptionAnswerOptionsequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_SelectionIdentifier_XsdtString_                                                                                                                                                             func(*XsdGoPkgHasElems_SelectionIdentifiersequenceTxsdAnswerKeySequenceQuestionSequenceAnswerOptionAnswerOptionsequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_SelectionIdentifier_XsdtString_, bool) error
	TxsdAnswerKeySequenceQualificationValueMappingChoiceScaleMapping                                                                                                                                                                                                                                                                                                                       func(*TxsdAnswerKeySequenceQualificationValueMappingChoiceScaleMapping, bool) error
	XsdGoPkgHasElem_InclusiveUpperBoundsequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRangeSummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_InclusiveUpperBound_XsdtInt_  func(*XsdGoPkgHasElem_InclusiveUpperBoundsequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRangeSummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_InclusiveUpperBound_XsdtInt_, bool) error
	TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRange                                                                                                                                                                                                                                                                                               func(*TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRange, bool) error
	TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMapping                                                                                                                                                                                                                                                                                                                       func(*TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMapping, bool) error
	XsdGoPkgHasElem_AnswerKey                                                                                                                                                                                                                                                                                                                                                              func(*XsdGoPkgHasElem_AnswerKey, bool) error
	XsdGoPkgHasElems_AnswerScoresequenceAnswerOptionsequenceQuestionsequenceAnswerKeyschema_AnswerScore_XsdtInt_                                                                                                                                                                                                                                                                           func(*XsdGoPkgHasElems_AnswerScoresequenceAnswerOptionsequenceQuestionsequenceAnswerKeyschema_AnswerScore_XsdtInt_, bool) error
	XsdGoPkgHasElems_ScaleMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_ScaleMapping_TxsdAnswerKeySequenceQualificationValueMappingChoiceScaleMapping_                                                                                                                                                          func(*XsdGoPkgHasElems_ScaleMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_ScaleMapping_TxsdAnswerKeySequenceQualificationValueMappingChoiceScaleMapping_, bool) error
	XsdGoPkgHasElems_RangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_RangeMapping_TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMapping_                                                                                                                                                          func(*XsdGoPkgHasElems_RangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_RangeMapping_TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMapping_, bool) error
	TxsdAnswerKeySequenceQuestionSequenceAnswerOption                                                                                                                                                                                                                                                                                                                                      func(*TxsdAnswerKeySequenceQuestionSequenceAnswerOption, bool) error
	XsdGoPkgHasElem_QuestionIdentifiersequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_QuestionIdentifier_XsdtString_                                                                                                                                                                                                                                     func(*XsdGoPkgHasElem_QuestionIdentifiersequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_QuestionIdentifier_XsdtString_, bool) error
	TxsdAnswerKeySequenceQuestion                                                                                                                                                                                                                                                                                                                                                          func(*TxsdAnswerKeySequenceQuestion, bool) error
	XsdGoPkgHasElems_QuestionsequenceTxsdAnswerKeyAnswerKeyschema_Question_TxsdAnswerKeySequenceQuestion_                                                                                                                                                                                                                                                                                  func(*XsdGoPkgHasElems_QuestionsequenceTxsdAnswerKeyAnswerKeyschema_Question_TxsdAnswerKeySequenceQuestion_, bool) error
	XsdGoPkgHasElem_MaximumSummedScoresequenceTxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMappingPercentageMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_MaximumSummedScore_XsdtInt_                                                                                                          func(*XsdGoPkgHasElem_MaximumSummedScoresequenceTxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMappingPercentageMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_MaximumSummedScore_XsdtInt_, bool) error
	XsdGoPkgHasElems_QuestionIdentifiersequenceQuestionsequenceAnswerKeyschema_QuestionIdentifier_XsdtString_                                                                                                                                                                                                                                                                              func(*XsdGoPkgHasElems_QuestionIdentifiersequenceQuestionsequenceAnswerKeyschema_QuestionIdentifier_XsdtString_, bool) error
	XsdGoPkgHasElems_SummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_SummedScoreRange_TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRange_                                      func(*XsdGoPkgHasElems_SummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_SummedScoreRange_TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRange_, bool) error
	XsdGoPkgHasCdata                                                                                                                                                                                                                                                                                                                                                                       func(*XsdGoPkgHasCdata, bool) error
	XsdGoPkgHasElems_QualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_QualificationValueMapping_TxsdAnswerKeySequenceQualificationValueMapping_                                                                                                                                                                                                                               func(*XsdGoPkgHasElems_QualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_QualificationValueMapping_TxsdAnswerKeySequenceQualificationValueMapping_, bool) error
	XsdGoPkgHasElems_MaximumSummedScoresequenceTxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMappingPercentageMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_MaximumSummedScore_XsdtInt_                                                                                                         func(*XsdGoPkgHasElems_MaximumSummedScoresequenceTxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMappingPercentageMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_MaximumSummedScore_XsdtInt_, bool) error
	XsdGoPkgHasElem_PercentageMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_PercentageMapping_TxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMapping_                                                                                                                                            func(*XsdGoPkgHasElem_PercentageMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_PercentageMapping_TxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMapping_, bool) error
	XsdGoPkgHasElem_ScaleMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_ScaleMapping_TxsdAnswerKeySequenceQualificationValueMappingChoiceScaleMapping_                                                                                                                                                           func(*XsdGoPkgHasElem_ScaleMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_ScaleMapping_TxsdAnswerKeySequenceQualificationValueMappingChoiceScaleMapping_, bool) error
	XsdGoPkgHasElem_InclusiveLowerBoundsequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRangeSummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_InclusiveLowerBound_XsdtInt_  func(*XsdGoPkgHasElem_InclusiveLowerBoundsequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRangeSummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_InclusiveLowerBound_XsdtInt_, bool) error
	XsdGoPkgHasElem_OutOfRangeQualificationValuesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_OutOfRangeQualificationValue_XsdtInt_                                                                                                func(*XsdGoPkgHasElem_OutOfRangeQualificationValuesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_OutOfRangeQualificationValue_XsdtInt_, bool) error
	XsdGoPkgHasElem_DefaultScoresequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_DefaultScore_XsdtInt_                                                                                                                                                                                                                                                    func(*XsdGoPkgHasElem_DefaultScoresequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_DefaultScore_XsdtInt_, bool) error
	XsdGoPkgHasElem_SummedScoreMultipliersequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceScaleMappingScaleMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_SummedScoreMultiplier_XsdtDouble_                                                                                                           func(*XsdGoPkgHasElem_SummedScoreMultipliersequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceScaleMappingScaleMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_SummedScoreMultiplier_XsdtDouble_, bool) error
	XsdGoPkgHasElems_DefaultScoresequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_DefaultScore_XsdtInt_                                                                                                                                                                                                                                                   func(*XsdGoPkgHasElems_DefaultScoresequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_DefaultScore_XsdtInt_, bool) error
	XsdGoPkgHasElems_InclusiveLowerBoundsequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRangeSummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_InclusiveLowerBound_XsdtInt_ func(*XsdGoPkgHasElems_InclusiveLowerBoundsequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRangeSummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_InclusiveLowerBound_XsdtInt_, bool) error
	XsdGoPkgHasElem_AnswerOptionsequenceQuestionsequenceAnswerKeyschema_AnswerOption_TxsdAnswerKeySequenceQuestionSequenceAnswerOption_                                                                                                                                                                                                                                                    func(*XsdGoPkgHasElem_AnswerOptionsequenceQuestionsequenceAnswerKeyschema_AnswerOption_TxsdAnswerKeySequenceQuestionSequenceAnswerOption_, bool) error
	XsdGoPkgHasElem_QuestionsequenceTxsdAnswerKeyAnswerKeyschema_Question_TxsdAnswerKeySequenceQuestion_                                                                                                                                                                                                                                                                                   func(*XsdGoPkgHasElem_QuestionsequenceTxsdAnswerKeyAnswerKeyschema_Question_TxsdAnswerKeySequenceQuestion_, bool) error
	XsdGoPkgHasElem_SelectionIdentifiersequenceAnswerOptionsequenceQuestionsequenceAnswerKeyschema_SelectionIdentifier_XsdtString_                                                                                                                                                                                                                                                         func(*XsdGoPkgHasElem_SelectionIdentifiersequenceAnswerOptionsequenceQuestionsequenceAnswerKeyschema_SelectionIdentifier_XsdtString_, bool) error
	XsdGoPkgHasElem_QualificationValuesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRangeSummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_QualificationValue_XsdtInt_    func(*XsdGoPkgHasElem_QualificationValuesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingSequenceSummedScoreRangeSummedScoreRangesequenceTxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMappingRangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_QualificationValue_XsdtInt_, bool) error
	XsdGoPkgHasElem_RangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_RangeMapping_TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMapping_                                                                                                                                                           func(*XsdGoPkgHasElem_RangeMappingchoiceTxsdAnswerKeySequenceQualificationValueMappingQualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_RangeMapping_TxsdAnswerKeySequenceQualificationValueMappingChoiceRangeMapping_, bool) error
	XsdGoPkgHasElem_QualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_QualificationValueMapping_TxsdAnswerKeySequenceQualificationValueMapping_                                                                                                                                                                                                                                func(*XsdGoPkgHasElem_QualificationValueMappingsequenceTxsdAnswerKeyAnswerKeyschema_QualificationValueMapping_TxsdAnswerKeySequenceQualificationValueMapping_, bool) error
	XsdGoPkgHasElems_AnswerKey                                                                                                                                                                                                                                                                                                                                                             func(*XsdGoPkgHasElems_AnswerKey, bool) error
	XsdGoPkgHasElems_QualificationValuesequenceSummedScoreRangesequenceRangeMappingchoiceQualificationValueMappingsequenceAnswerKeyschema_QualificationValue_XsdtInt_                                                                                                                                                                                                                      func(*XsdGoPkgHasElems_QualificationValuesequenceSummedScoreRangesequenceRangeMappingchoiceQualificationValueMappingsequenceAnswerKeyschema_QualificationValue_XsdtInt_, bool) error
	XsdGoPkgHasElems_InclusiveUpperBoundsequenceSummedScoreRangesequenceRangeMappingchoiceQualificationValueMappingsequenceAnswerKeyschema_InclusiveUpperBound_XsdtInt_                                                                                                                                                                                                                    func(*XsdGoPkgHasElems_InclusiveUpperBoundsequenceSummedScoreRangesequenceRangeMappingchoiceQualificationValueMappingsequenceAnswerKeyschema_InclusiveUpperBound_XsdtInt_, bool) error
	XsdGoPkgHasElems_AnswerOptionsequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_AnswerOption_TxsdAnswerKeySequenceQuestionSequenceAnswerOption_                                                                                                                                                                                                         func(*XsdGoPkgHasElems_AnswerOptionsequenceTxsdAnswerKeySequenceQuestionQuestionsequenceTxsdAnswerKeyAnswerKeyschema_AnswerOption_TxsdAnswerKeySequenceQuestionSequenceAnswerOption_, bool) error
	TxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMapping                                                                                                                                                                                                                                                                                                                  func(*TxsdAnswerKeySequenceQualificationValueMappingChoicePercentageMapping, bool) error
	TxsdAnswerKeySequenceQualificationValueMapping                                                                                                                                                                                                                                                                                                                                         func(*TxsdAnswerKeySequenceQualificationValueMapping, bool) error
	XsdGoPkgHasElems_SummedScoreMultipliersequenceScaleMappingchoiceQualificationValueMappingsequenceAnswerKeyschema_SummedScoreMultiplier_XsdtDouble_                                                                                                                                                                                                                                     func(*XsdGoPkgHasElems_SummedScoreMultipliersequenceScaleMappingchoiceQualificationValueMappingsequenceAnswerKeyschema_SummedScoreMultiplier_XsdtDouble_, bool) error
}
